% Nama: Mg. Ribka Yohanna Senduk
%% NIM: 22305141038
%% Kelas: Matematika B
% 
% * Kalkulus dengan EMT
% 
% Materi Kalkulus mencakup di antaranya:
% 
% - Fungsi (fungsi aljabar, trigonometri, eksponensial, logaritma,
% komposisi fungsi)
%% - Limit Fungsi,
%% - Turunan Fungsi,
%% - Integral Tak Tentu,
%% - Integral Tentu dan Aplikasinya,
%% - Barisan dan Deret (kekonvergenan barisan dan deret).
% 
% EMT (bersama Maxima) dapat digunakan untuk melakukan semua perhitungan
% di dalam kalkulus, baik secara numerik maupun analitik (eksak).
% 
% ** Mendefinisikan Fungsi
% 
% Terdapat beberapa cara mendefinisikan fungsi pada EMT, yakni:
% 
% - Menggunakan format nama_fungsi := rumus fungsi (untuk fungsi
% numerik),
%% - Menggunakan format nama_fungsi &= rumus fungsi (untuk fungsi
% simbolik, namun dapat dihitung secara numerik),
%% - Menggunakan format nama_fungsi &&= rumus fungsi (untuk fungsi
% simbolik murni, tidak dapat dihitung langsung),
%% - Fungsi sebagai program EMT.
% 
% Setiap format harus diawali dengan perintah function (bukan sebagai
% ekspresi).
% 
% Berikut adalah adalah beberapa contoh cara mendefinisikan fungsi:
% 
% latex: f(x)=2x^2+e^{\sin(x)}.
% %image% 22305141038 - Mg. Ribka - EMTKalkulus-001.png
% // latex: f(x)=2x^2+e^{\sin(x)}.
>function f(x) := 2*x^2+exp(sin(x)) // fungsi numerik
>f(0), f(1), f(pi)
1
4.31977682472
20.7392088022
>f(a) // tidak dapat dihitung nilainya
Variable or function a not found.
Error in:
f(a) // tidak dapat dihitung nilainya ...
   ^
% Silakan Anda plot kurva fungsi di atas!
% 
% Berikutnya kita definisikan fungsi:
% 
% latex: g(x)=\frac{\sqrt{x^2-3x}}{x+1}.
>function g(x) := sqrt(x^2-3*x)/(x+1)
>g(3)
0
>g(0)
0
>g(1) // kompleks, tidak dapat dihitung oleh fungsi numerik
Floating point error!
Error in sqrt
Try "trace errors" to inspect local variables after errors.
g:
    useglobal; return sqrt(x^2-3*x)/(x+1) 
Error in:
g(1) // kompleks, tidak dapat dihitung oleh fungsi numerik ...
    ^
% Silakan Anda plot kurva fungsi di atas!
>f(g(5)) // komposisi fungsi
2.20920171961
>g(f(5))
0.950898070639
>function h(x) := f(g(x)) // definisi komposisi fungsi 
>h(5) // sama dengan f(g(5))
2.20920171961
% Silakan Anda plot kurva fungsi komposisi fungsi f dan g:
% 
% latex: h(x)=f(g(x))
% 
% dan
% 
% latex: u(x)=g(f(x))
% 
% bersama-sama kurva fungsi f dan g dalam satu bidang koordinat.
>f(0:10) // nilai-nilai f(0), f(1), f(2), ..., f(10)
[1,  4.31978,  10.4826,  19.1516,  32.4692,  50.3833,  72.7562,
99.929,  130.69,  163.51,  200.58]
>fmap(0:10) // sama dengan f(0:10), berlaku untuk semua fungsi
[1,  4.31978,  10.4826,  19.1516,  32.4692,  50.3833,  72.7562,
99.929,  130.69,  163.51,  200.58]
>gmap(200:210)
[0.987534,  0.987596,  0.987657,  0.987718,  0.987778,  0.987837,
0.987896,  0.987954,  0.988012,  0.988069,  0.988126]
% Misalkan kita akan mendefinisikan fungsi
% 
% latex: f(x) = \begin{cases} x^3 & x>0 \\ x^2 & x\le 0. \end{cases}
% 
% Fungsi tersebut tidak dapat didefinisikan sebagai fungsi numerik secara "inline" menggunakan
% format :=, melainkan didefinisikan sebagai program. Perhatikan, kata "map" digunakan agar fungsi
% dapat menerima vektor sebagai input, dan hasilnya berupa vektor. Jika tanpa kata "map" fungsinya
% hanya dapat menerima input satu nilai.
>function map f(x) ...
$  if x>0 then return x^3
$  else return x^2
$  endif;
$endfunction
>f(1)
1
>f(-2)
4
>f(-5:5)
[25,  16,  9,  4,  1,  0,  1,  8,  27,  64,  125]
>aspect(1.5); plot2d("f(x)",-5,5):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-002.png
>function f(x) &= 2*E^x // fungsi simbolik

                                    x
                                 2 E

>$f(a) // nilai fungsi secara simbolik
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-003.png
% // latex: 2\,e^{a}
>f(E) // nilai fungsi berupa bilangan desimal
30.308524483
>$f(E), $float(%)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-004.png
% // latex: 30.30852448295852
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-005.png
>function g(x) &= 3*x+1

                               3 x + 1

>function h(x) &= f(g(x)) // komposisi fungsi

                                 3 x + 1
                              2 E

>plot2d("h(x)",-1,1):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-006.png
>
% * Latihan
% 
% Bukalah buku Kalkulus. Cari dan pilih beberapa (paling sedikit 5 fungsi berbeda
% tipe/bentuk/jenis) fungsi dari buku tersebut, kemudian definisikan fungsi-fungsi tersebut dan
% komposisinya di EMT pada baris-baris perintah berikut (jika perlu tambahkan lagi). Untuk setiap
% fungsi, hitung beberapa nilainya, baik untuk satu nilai maupun vektor. Gambar grafik
% fungsi-fungsi tersebut dan komposisi-komposisi 2 fungsi.
% 
% Juga, carilah fungsi beberapa (dua) variabel. Lakukan hal sama seperti di atas.
>function f(x) := 2x+3
>function g(x) := x^2
>f(g(5))
53
>function f(x) := 3x-1
>function g(x) := ln(x)
>f(5)
14
>g(5)
1.60943791243
>g(f(5))
2.63905732962
>function h(x) := g(f(x))
>h(5)
2.63905732962
>function f(x) := sqrt(x)
>function g(x) := x^2+4
>function h(x) := g(f(x))
>h(10)
14
>function f(x) := sin(x)
>aspect(1.5); plot2d("f(x)",-5,5):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-007.png
>function f(x) := sin(x)
>function g(x) := cos(2x)
>function h(x) := f(g(x))
>aspect(1.5); plot2d("h(x)",-5,5):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-008.png
>
$
>function f(x) := x^2 - 4x + 4
>function g(x) := 2x^2
>function h(x) := g(f(x))
>aspect(1.5); plot2d("h(x)",-5,5):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-009.png
% 
% * Menghitung Limit
% 
% Perhitungan limit pada EMT dapat dilakukan dengan menggunakan fungsi Maxima, yakni "limit".
% Fungsi "limit" dapat digunakan untuk menghitung limit fungsi dalam bentuk ekspresi maupun fungsi
% yang sudah didefinisikan sebelumnya. Nilai limit dapat dihitung pada sebarang nilai atau pada tak
% hingga (-inf, minf, dan inf). Limit kiri dan limit kanan juga dapat dihitung, dengan cara memberi
% opsi "plus" atau "minus". Hasil limit dapat berupa nilai, "und" (tak definisi), "ind" (tak tentu
% namun terbatas), "infinity" (kompleks tak hingga).
% 
% Perhatikan beberapa contoh berikut. Perhatikan cara menampilkan perhitungan secara lengkap, tidak
% hanya menampilkan hasilnya saja.
>$showev('limit(sqrt(x^2-3*x)/(x+1),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-010.png
% // latex: \lim_{x\rightarrow \infty }{\frac{\sqrt{x^2-3\,x}}{x+1}}=1
>$limit((x^3-13*x^2+51*x-63)/(x^3-4*x^2-3*x+18),x,3)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-011.png
% // latex: -\frac{4}{5}
% maxima: 'limit((x^3-13*x^2+51*x-63)/(x^3-4*x^2-3*x+18),x,3)=limit((x^3-13*x^2+51*x-63)/(x^3-4*x^2-3*x+18),x,3)
% 
% Fungsi tersebut diskontinu di titik x=3. Berikut adalah grafik fungsinya.
>aspect(1.5); plot2d("(x^3-13*x^2+51*x-63)/(x^3-4*x^2-3*x+18)",0,4); plot2d(3,-4/5,>points,style="ow",>add):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-012.png
>$limit(2*x*sin(x)/(1-cos(x)),x,0)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-013.png
% // latex: 4
% maxima: 'limit(2*x*sin(x)/(1-cos(x)),x,0)=limit(2*x*sin(x)/(1-cos(x)),x,0)
% 
% Fungsi tersebut diskontinu di titik x=0. Berikut adalah grafik fungsinya.
>plot2d("2*x*sin(x)/(1-cos(x))",-pi,pi); plot2d(0,4,>points,style="ow",>add):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-014.png
>$limit(cot(7*h)/cot(5*h),h,0)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-015.png
% // latex: \frac{5}{7}
% maxima: showev('limit(cot(7*h)/cot(5*h),h,0))
% 
% Fungsi tersebut juga diskontinu (karena tidak terdefinisi) di x=0. Berikut adalah grafiknya.
>plot2d("cot(7*x)/cot(5*x)",-0.001,0.001); plot2d(0,5/7,>points,style="ow",>add):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-016.png
>$showev('limit(((x/8)^(1/3)-1)/(x-8),x,8))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-017.png
% // latex: \lim_{x\rightarrow 8}{\frac{\frac{x^{\frac{1}{3}}}{2}-1}{x-8}}=  \frac{1}{24}
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit(1/(2*x-1),x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-018.png
% // latex: \lim_{x\rightarrow 0}{\frac{1}{2\,x-1}}=-1
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit((x^2-3*x-10)/(x-5),x,5))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-019.png
% // latex: \lim_{x\rightarrow 5}{\frac{x^2-3\,x-10}{x-5}}=7
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit(sqrt(x^2+x)-x,x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-020.png
% // latex: \lim_{x\rightarrow \infty }{\sqrt{x^2+x}-x}=\frac{1}{2}
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit(abs(x-1)/(x-1),x,1,minus))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-021.png
% // latex: \lim_{x\uparrow 1}{\frac{\left| x-1\right| }{x-1}}=-1
% Hitung limit di atas untuk x menuju 1 dari kanan.
%% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>
>$showev('limit(sin(x)/x,x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-022.png
% // latex: \lim_{x\rightarrow 0}{\frac{\sin x}{x}}=1
>plot2d("sin(x)/x",-pi,pi); plot2d(0,1,>points,style="ow",>add):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-023.png
>$showev('limit(sin(x^3)/x,x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-024.png
% // latex: \lim_{x\rightarrow 0}{\frac{\sin x^3}{x}}=0
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit(log(x), x, minf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-025.png
% // latex: \lim_{x\rightarrow  -\infty }{\log x}={\it infinity}
>$showev('limit((-2)^x,x, inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-026.png
% // latex: \lim_{x\rightarrow \infty }{\left(-2\right)^{x}}={\it infinity}
>$showev('limit(t-sqrt(2-t),t,2,minus))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-027.png
% // latex: \lim_{t\uparrow 2}{t-\sqrt{2-t}}=2
>$showev('limit(t-sqrt(2-t),t,2,plus))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-028.png
% // latex: \lim_{t\downarrow 2}{t-\sqrt{2-t}}=2
>$showev('limit(t-sqrt(2-t),t,5,plus)) // Perhatikan hasilnya
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-029.png
% // latex: \lim_{t\downarrow 5}{t-\sqrt{2-t}}=5-\sqrt{3}\,i
>plot2d("x-sqrt(2-x)",0,2):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-030.png
>$showev('limit((x^2-9)/(2*x^2-5*x-3),x,3))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-031.png
% // latex: \lim_{x\rightarrow 3}{\frac{x^2-9}{2\,x^2-5\,x-3}}=\frac{6}{7}
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit((1-cos(x))/x,x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-032.png
% // latex: \lim_{x\rightarrow 0}{\frac{1-\cos x}{x}}=0
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit((x^2+abs(x))/(x^2-abs(x)),x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-033.png
% // latex: \lim_{x\rightarrow 0}{\frac{\left| x\right| +x^2}{x^2-\left| x  \right| }}=-1
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit((1+1/x)^x,x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-034.png
% // latex: \lim_{x\rightarrow \infty }{\left(\frac{1}{x}+1\right)^{x}}=e
>plot2d("(1+1/x)^x",0,1000):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-035.png
>$showev('limit((1+k/x)^x,x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-036.png
% // latex: \lim_{x\rightarrow \infty }{\left(\frac{k}{x}+1\right)^{x}}=e^{k}
>$showev('limit((1+x)^(1/x),x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-037.png
% // latex: \lim_{x\rightarrow 0}{\left(x+1\right)^{\frac{1}{x}}}=e
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit((x/(x+k))^x,x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-038.png
% // latex: \lim_{x\rightarrow \infty }{\left(\frac{x}{x+k}\right)^{x}}=e^ {- k   }
>$showev('limit((E^x-E^2)/(x-2),x,2))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-039.png
% // latex: \lim_{x\rightarrow 2}{\frac{e^{x}-e^2}{x-2}}=e^2
% Tunjukkan limit tersebut dengan grafik, seperti contoh-contoh sebelumnya.
>$showev('limit(sin(1/x),x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-040.png
% // latex: \lim_{x\rightarrow 0}{\sin \left(\frac{1}{x}\right)}={\it ind}
>$showev('limit(sin(1/x),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-041.png
% // latex: \lim_{x\rightarrow \infty }{\sin \left(\frac{1}{x}\right)}=0
>plot2d("sin(1/x)",-0.001,0.001):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-042.png
% * Latihan
% 
% Bukalah buku Kalkulus. Cari dan pilih beberapa (paling sedikit 5 fungsi berbeda
% tipe/bentuk/jenis) fungsi dari buku tersebut, kemudian definisikan di EMT pada
% baris-baris perintah berikut (jika perlu tambahkan lagi). Untuk setiap fungsi, hitung
% nilai limit fungsi tersebut di beberapa nilai dan di tak hingga. Gambar grafik fungsi
% tersebut untuk mengkonfirmasi nilai-nilai limit tersebut.
>$showev('limit(sqrt(x^2-3*x)/(x+1),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-043.png
% // latex: \lim_{x\rightarrow \infty }{\frac{\sqrt{x^2-3\,x}}{x+1}}=1
>$showev('limit((3*x^3-2*x^2+5*x-1),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-044.png
% // latex: \lim_{x\rightarrow \infty }{3\,x^3-2\,x^2+5\,x-1}=\infty 
>plot2d("3*x^3-2*x^2+5*x-1",0,1000):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-045.png
>$showev('limit((sin(x)),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-046.png
% // latex: \lim_{x\rightarrow \infty }{\sin x}={\it ind}
>$showev('limit((x^2+3*x+2)/(x+1),x,-1))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-047.png
% // latex: \lim_{x\rightarrow -1}{\frac{x^2+3\,x+2}{x+1}}=1
>$showev('limit((x^2+3*x+2)/(x+1),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-048.png
% // latex: \lim_{x\rightarrow \infty }{\frac{x^2+3\,x+2}{x+1}}=\infty 
>$showev('limit((e^-x),x,1))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-049.png
% // latex: \lim_{x\rightarrow 1}{\frac{1}{e^{x}}}=\frac{1}{e}
>$showev('limit((e^-x),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-050.png
% // latex: \lim_{x\rightarrow \infty }{\frac{1}{e^{x}}}=\lim_{x\rightarrow   \infty }{\frac{1}{e^{x}}}
>$showev('limit(sqrt(x^2-4*x+4),x,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-051.png
% // latex: \lim_{x\rightarrow \infty }{\sqrt{x^2-4\,x+4}}=\infty 
>$showev('limit(sqrt(x^2-4*x+4),x,4))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-052.png
% // latex: \lim_{x\rightarrow 4}{\sqrt{x^2-4\,x+4}}=2
>plot2d("sqrt(x^2-4*x+4)",0,100):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-053.png
>$showev('limit((3*x^3-2*x^2+5*x-1),x,2)) 
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-054.png
% // latex: \lim_{x\rightarrow 2}{3\,x^3-2\,x^2+5\,x-1}=25
% 
% * Turunan Fungsi
% 
% Definisi turunan:
% 
% latex: f'(x) = \lim_{h\to 0} \frac{f(x+h)-f(x)}{h}
% 
% Berikut adalah contoh-contoh menentukan turunan fungsi dengan menggunakan definisi turunan
% (limit).
>$showev('limit(((x+h)^2-x^2)/h,h,0)) // turunan x^2
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-055.png
% // latex: \lim_{h\rightarrow 0}{\frac{\left(x+h\right)^2-x^2}{h}}=2\,x
>p &= expand((x+h)^2-x^2)|simplify; $p //pembilang dijabarkan dan disederhanakan
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-056.png
% // latex: 2\,h\,x+h^2
>q &=ratsimp(p/h); $q // ekspresi yang akan dihitung limitnya disederhanakan
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-057.png
% // latex: 2\,x+h
>$limit(q,h,0) // nilai limit sebagai turunan
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-058.png
% // latex: 2\,x
>$showev('limit(((x+h)^n-x^n)/h,h,0)) // turunan x^n
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-059.png
% // latex: \lim_{h\rightarrow 0}{\frac{\left(x+h\right)^{n}-x^{n}}{h}}=n\,x^{n  -1}
% Mengapa hasilnya seperti itu? Tuliskan atau tunjukkan bahwa hasil limit tersebut
% benar, sehingga benar turunan fungsinya benar.  Tulis penjelasan Anda di komentar
% ini.
% 
% Sebagai petunjuk, ekspansikan (x+h)^n dengan menggunakan teorema binomial.
>$showev('limit((sin(x+h)-sin(x))/h,h,0)) // turunan sin(x)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-060.png
% // latex: \lim_{h\rightarrow 0}{\frac{\sin \left(x+h\right)-\sin x}{h}}=\cos   x
% Mengapa hasilnya seperti itu? Tuliskan atau tunjukkan bahwa hasil limit tersebut
%% benar, sehingga benar turunan fungsinya benar.  Tulis penjelasan Anda di komentar
% ini.
% 
% Sebagai petunjuk, ekspansikan sin(x+h) dengan menggunakan rumus jumlah dua sudut.
>$showev('limit((log(x+h)-log(x))/h,h,0)) // turunan log(x)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-061.png
% // latex: \lim_{h\rightarrow 0}{\frac{\log \left(x+h\right)-\log x}{h}}=  \frac{1}{x}
% Mengapa hasilnya seperti itu? Tuliskan atau tunjukkan bahwa hasil limit tersebut
%% benar, sehingga benar turunan fungsinya benar.  Tulis penjelasan Anda di komentar
% ini.
% 
% Sebagai petunjuk, gunakan sifat-sifat logaritma dan hasil limit pada bagian
% sebelumnya di atas.
>$showev('limit((1/(x+h)-1/x)/h,h,0)) // turunan 1/x
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-062.png
% // latex: \lim_{h\rightarrow 0}{\frac{\frac{1}{x+h}-\frac{1}{x}}{h}}=-\frac{1  }{x^2}
>$showev('limit((E^(x+h)-E^x)/h,h,0)) // turunan f(x)=e^x
Answering "Is x an integer?" with "integer"
Answering "Is x an integer?" with "integer"
Answering "Is x an integer?" with "integer"
Answering "Is x an integer?" with "integer"
Answering "Is x an integer?" with "integer"
Maxima is asking
Acceptable answers are: yes, y, Y, no, n, N, unknown, uk
Is x an integer?

Use assume!
Error in:
 $showev('limit((E^(x+h)-E^x)/h,h,0)) // turunan f(x)=e^x ...
                                     ^
% Maxima bermasalah dengan limit:
% 
% latex: \lim_{h\to 0}\frac{e^{x+h}-e^x}{h}.
% 
% Oleh karena itu diperlukan trik khusus agar hasilnya benar.
>$showev('limit((E^h-1)/h,h,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-063.png
% // latex: \lim_{h\rightarrow 0}{\frac{e^{h}-1}{h}}=1
>$showev('factor(E^(x+h)-E^x))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-064.png
% // latex: {\it factor}\left(e^{x+h}-e^{x}\right)=\left(e^{h}-1\right)\,e^{x}
>$showev('limit(factor((E^(x+h)-E^x)/h),h,0)) // turunan f(x)=e^x
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-065.png
% // latex: \left(\lim_{h\rightarrow 0}{\frac{e^{h}-1}{h}}\right)\,e^{x}=e^{x}
>function f(x) &= x^x

                                   x
                                  x

>$showev('limit(f(x),x,0))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-066.png
% // latex: \lim_{x\rightarrow 0}{x^{x}}=1
% Silakan Anda gambar kurva
% 
% latex: y=x^x.
>aspect(1.5); plot2d("f(x)",-5,5):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-067.png
>$showev('limit((f(x+h)-f(x))/h,h,0)) // turunan f(x)=x^x
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-068.png
% // latex: \lim_{h\rightarrow 0}{\frac{\left(x+h\right)^{x+h}-x^{x}}{h}}=  {\it infinity}
% Di sini Maxima juga bermasalah terkait limit:
% 
% latex: \lim_{h\to 0} \frac{(x+h)^{x+h}-x^x}{h}.
% 
% Dalam hal ini diperlukan asumsi nilai x.
>&assume(x>0); $showev('limit((f(x+h)-f(x))/h,h,0)) // turunan f(x)=x^x
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-069.png
% // latex: \lim_{h\rightarrow 0}{\frac{\left(x+h\right)^{x+h}-x^{x}}{h}}=x^{x}  \,\left(\log x+1\right)
% Mengapa hasilnya seperti itu? Tuliskan atau tunjukkan bahwa hasil limit tersebut benar, sehingga benar turunan fungsinya benar.
% Tulis penjelasan Anda di komentar ini.
>&forget(x>0) // jangan lupa, lupakan asumsi untuk kembali ke semula

                               [x > 0]

>&forget(x<0)

                               [x < 0]

>&facts()

                                  []

>$showev('limit((asin(x+h)-asin(x))/h,h,0)) // turunan arcsin(x)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-070.png
% // latex: \lim_{h\rightarrow 0}{\frac{\arcsin \left(x+h\right)-\arcsin x}{h}}=  \frac{1}{\sqrt{1-x^2}}
% Mengapa hasilnya seperti itu? Tuliskan atau tunjukkan bahwa hasil limit tersebut benar, sehingga
% benar turunan fungsinya benar. Tulis penjelasan Anda di komentar ini.
>$showev('limit((tan(x+h)-tan(x))/h,h,0)) // turunan tan(x)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-071.png
% // latex: \lim_{h\rightarrow 0}{\frac{\tan \left(x+h\right)-\tan x}{h}}=  \frac{1}{\cos ^2x}
% Mengapa hasilnya seperti itu? Tuliskan atau tunjukkan bahwa hasil limit tersebut benar, sehingga
% benar turunan fungsinya benar. Tulis penjelasan Anda di komentar ini.
>function f(x) &= sinh(x) // definisikan f(x)=sinh(x)

                               sinh(x)

>function df(x) &= limit((f(x+h)-f(x))/h,h,0); $df(x) // df(x) = f'(x)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-072.png
% // latex: \frac{e^ {- x }\,\left(e^{2\,x}+1\right)}{2}
% Hasilnya adalah cosh(x), karena
% 
% latex: \frac{e^x+e^{-x}}{2}=\cosh(x).
>plot2d(["f(x)","df(x)"],-pi,pi,color=[blue,red]):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-073.png
>function f(x) &= sin(3*x^5+7)^2

                               2    5
                            sin (3 x  + 7)

>diff(f,3), diffc(f,3)
1198.32948904
1198.72863721
% Apakah perbedaan diff dan diffc?
>$showev('diff(f(x),x))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-074.png
% // latex: \frac{d}{d\,x}\,\sin ^2\left(3\,x^5+7\right)=30\,x^4\,\cos \left(3  \,x^5+7\right)\,\sin \left(3\,x^5+7\right)
>$% with x=3
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-075.png
% // latex: {\it \%at}\left(\frac{d}{d\,x}\,\sin ^2\left(3\,x^5+7\right) , x=3  \right)=2430\,\cos 736\,\sin 736
>$float(%)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-076.png
% // latex: {\it \%at}\left(\frac{d^{1.0}}{d\,x^{1.0}}\,\sin ^2\left(3.0\,x^5+  7.0\right) , x=3.0\right)=1198.728637211748
>plot2d(f,0,3.1):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-077.png
>function f(x) &=5*cos(2*x)-2*x*sin(2*x) // mendifinisikan fungsi f

                      5 cos(2 x) - 2 x sin(2 x)

>function df(x) &=diff(f(x),x) // fd(x) = f'(x)

                     - 12 sin(2 x) - 4 x cos(2 x)

>$'f(1)=f(1), $float(f(1)), $'f(2)=f(2), $float(f(2)) // nilai f(1) dan f(2)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-078.png
% // latex: -0.2410081230863468
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-079.png
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-080.png
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-081.png
>xp=solve("df(x)",1,2,0) // solusi f'(x)=0 pada interval [1, 2]
1.35822987384
>df(xp), f(xp) // cek bahwa f'(xp)=0 dan nilai ekstrim di titik tersebut
0
-5.67530133759
>plot2d(["f(x)","df(x)"],0,2*pi,color=[blue,red]): //grafik fungsi dan turunannya
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-082.png
% Perhatikan titik-titik "puncak" grafik y=f(x) dan nilai turunan pada saat grafik fungsinya mencapai titik "puncak" tersebut.
>
>
>
% * Latihan
% 
% Bukalah buku Kalkulus. Cari dan pilih beberapa (paling sedikit 5 fungsi berbeda tipe/bentuk/jenis) fungsi dari buku tersebut,
% kemudian definisikan di EMT pada baris-baris perintah berikut (jika perlu tambahkan lagi). Untuk setiap fungsi, tentukan turunannya
% dengan menggunakan definisi turunan (limit), menggunakan perintah diff, dan secara manual (langkah demi langkah yang dihitung dengan
% Maxima) seperti contoh-contoh di atas. Gambar grafik fungsi asli dan fungsi turunannya pada sumbu koordinat yang sama.
>function f(x) &=5*sin(x)-2*x*cos(x)

                        5 sin(x) - 2 x cos(x)

>function df(x) &=diff(f(x),x)

                        2 x sin(x) + 3 cos(x)

>plot2d(["f(x)","df(x)"],0,2*pi,color=[blue,red]):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-083.png
>function f(x) &=sin(x+2)^2-cos(x)

                            2
                         sin (x + 2) - cos(x)

>function df(x) &=diff(f(x),x)

                   2 cos(x + 2) sin(x + 2) + sin(x)

>plot2d(["f(x)","df(x)"],0,2*pi,color=[blue,red]):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-084.png
>function f(x) &=5*cos(2*x)-2*x*sin(2*x)

                      5 cos(2 x) - 2 x sin(2 x)

>function df(x) &=diff(f(x),x)

                     - 12 sin(2 x) - 4 x cos(2 x)

>plot2d(["f(x)","df(x)"],0,2*pi,color=[blue,red]):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-085.png
>function f(x) &=x^2-4*x+4

                              2
                             x  - 4 x + 4

>function df(x) &=diff(f(x),x)

                               2 x - 4

>plot2d(["f(x)","df(x)"],0,10,color=[blue,red]):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-086.png
>function f(x) &=(x^2-3*x)/(x+1)

                                2
                               x  - 3 x
                               --------
                                x + 1

>function df(x) &=diff(f(x),x)

                                     2
                          2 x - 3   x  - 3 x
                          ------- - --------
                           x + 1           2
                                    (x + 1)

>plot2d(["f(x)","df(x)"],0,7,color=[blue,red]):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-087.png
>function f(x) &=sqrt(x^2-3*x)

                                  2
                            sqrt(x  - 3 x)

>function df(x) &=diff(f(x),x)

                               2 x - 3
                           ----------------
                                   2
                           2 sqrt(x  - 3 x)

>plot2d(["f(x)","df(x)"],2,7,color=[blue,red]):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-088.png
>
>

% * Integral
% 
% EMT dapat digunakan untuk menghitung integral, baik integral tak tentu maupun
% integral tentu. Untuk integral tak tentu (simbolik) sudah tentu EMT menggunakan
% Maxima, sedangkan untuk perhitungan integral tentu EMT sudah menyediakan beberapa
% fungsi yang mengimplementasikan algoritma kuadratur (perhitungan integral tentu
% menggunakan metode numerik).
% 
% Pada notebook ini akan ditunjukkan perhitungan integral tentu dengan menggunakan
% Teorema Dasar Kalkulus:
% 
% latex: \int_a^b f(x)\ dx = F(b)-F(a), \quad \text{ dengan  } F'(x) = f(x).
% 
% Fungsi untuk menentukan integral adalah integrate. Fungsi ini dapat digunakan untuk
% menentukan, baik integral tentu maupun tak tentu (jika fungsinya memiliki
% antiderivatif). Untuk perhitungan integral tentu fungsi integrate menggunakan metode
% numerik (kecuali fungsinya tidak integrabel, kita tidak akan menggunakan metode ini).
>$showev('integrate(x^n,x))
Answering "Is n equal to -1?" with "no"
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-089.png
% // latex: \int {x^{n}}{\;dx}=\frac{x^{n+1}}{n+1}
>$showev('integrate(1/(1+x),x))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-090.png
% // latex: \int {\frac{1}{x+1}}{\;dx}=\log \left(x+1\right)
>$showev('integrate(1/(1+x^2),x))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-091.png
% // latex: \int {\frac{1}{x^2+1}}{\;dx}=\arctan x
>$showev('integrate(1/sqrt(1-x^2),x))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-092.png
% // latex: \int {\frac{1}{\sqrt{1-x^2}}}{\;dx}=\arcsin x
>$showev('integrate(sin(x),x,0,pi))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-093.png
% // latex: \int_{0}^{\pi}{\sin x\;dx}=2
>plot2d("sin(x)",0,2*pi):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-094.png
>$showev('integrate(sin(x),x,a,b))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-095.png
% // latex: \int_{a}^{b}{\sin x\;dx}=\cos a-\cos b
>$showev('integrate(x^n,x,a,b))
Answering "Is n positive, negative or zero?" with "positive"
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-096.png
% // latex: \int_{a}^{b}{x^{n}\;dx}=\frac{b^{n+1}}{n+1}-\frac{a^{n+1}}{n+1}
>$showev('integrate(x^2*sqrt(2*x+1),x))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-097.png
% // latex: \int {x^2\,\sqrt{2\,x+1}}{\;dx}=\frac{\left(2\,x+1\right)^{\frac{7  }{2}}}{28}-\frac{\left(2\,x+1\right)^{\frac{5}{2}}}{10}+\frac{\left(  2\,x+1\right)^{\frac{3}{2}}}{12}
>$showev('integrate(x^2*sqrt(2*x+1),x,0,2))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-098.png
% // latex: \int_{0}^{2}{x^2\,\sqrt{2\,x+1}\;dx}=\frac{2\,5^{\frac{5}{2}}}{21}-  \frac{2}{105}
>$ratsimp(%)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-099.png
% // latex: \int_{0}^{2}{x^2\,\sqrt{2\,x+1}\;dx}=\frac{2\,5^{\frac{7}{2}}-2}{  105}
>$showev('integrate((sin(sqrt(x)+a)*E^sqrt(x))/sqrt(x),x,0,pi^2))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-100.png
% // latex: \int_{0}^{\pi^2}{\frac{\sin \left(\sqrt{x}+a\right)\,e^{\sqrt{x}}}{  \sqrt{x}}\;dx}=\left(-e^{\pi}-1\right)\,\sin a+\left(e^{\pi}+1  \right)\,\cos a
>$factor(%)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-101.png
% // latex: \int_{0}^{\pi^2}{\frac{\sin \left(\sqrt{x}+a\right)\,e^{\sqrt{x}}}{  \sqrt{x}}\;dx}=\left(-e^{\pi}-1\right)\,\left(\sin a-\cos a\right)
>function map f(x) &= E^(-x^2)

                                    2
                                 - x
                                E

>$showev('integrate(f(x),x))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-102.png
% // latex: \int {e^ {- x^2 }}{\;dx}=\frac{\sqrt{\pi}\,\mathrm{erf}\left(x  \right)}{2}
% Fungsi f tidak memiliki antiturunan, integralnya masih memuat integral lain.
% 
% latex: erf(x) = \int \frac{e^{-x^2}}{\sqrt{\pi}} \ dx.
% 
% Kita tidak dapat menggunakan teorema Dasar kalkulus untuk menghitung integral tentu fungsi tersebut jika semua batasnya berhingga.
% Dalam hal ini dapat digunakan metode numerik (rumus kuadratur).
% 
% Misalkan kita akan menghitung:
% 
% maxima: 'integrate(f(x),x,0,pi)
>x=0:0.1:pi-0.1; plot2d(x,f(x+0.1),>bar); plot2d("f(x)",0,pi,>add):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-103.png
% Integral tentu
% 
% maxima: 'integrate(f(x),x,0,pi)
% 
% dapat dihampiri dengan jumlah luas persegi-persegi panjang di bawah kurva y=f(x)
% tersebut. Langkah-langkahnya adalah sebagai berikut.
>t &= makelist(a,a,0,pi-0.1,0.1); // t sebagai list untuk menyimpan nilai-nilai x
>fx &= makelist(f(t[i]+0.1),i,1,length(t)); // simpan nilai-nilai f(x)
>// jangan menggunakan x sebagai list, kecuali Anda pakar Maxima!
% Hasilnya adalah:
% 
% maxima: 'integrate(f(x),x,0,pi) = 0.1*sum(fx[i],i,1,length(fx))
% 
% Jumlah tersebut diperoleh dari hasil kali lebar sub-subinterval (=0.1) dan jumlah nilai-nilai f(x) untuk
% x = 0.1, 0.2, 0.3, ..., 3.2.
>0.1*sum(f(x+0.1)) // cek langsung dengan perhitungan numerik EMT
0.836219610253
% Untuk mendapatkan nilai integral tentu yang mendekati nilai sebenarnya, lebar
% sub-intervalnya dapat diperkecil lagi, sehingga daerah di bawah kurva tertutup
% semuanya, misalnya dapat digunakan lebar subinterval 0.001. (Silakan dicoba!)
% 
% Meskipun Maxima tidak dapat menghitung integral tentu fungsi tersebut untuk
% batas-batas yang berhingga, namun integral tersebut dapat dihitung secara eksak jika
% batas-batasnya tak hingga. Ini adalah salah satu keajaiban di dalam matematika, yang
% terbatas tidak dapat dihitung secara eksak, namun yang tak hingga malah dapat
% dihitung secara eksak.
>$showev('integrate(f(x),x,0,inf))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-104.png
% // latex: \int_{0}^{\infty }{e^ {- x^2 }\;dx}=\frac{\sqrt{\pi}}{2}
% Tunjukkan kebenaran hasil di atas!
% 
% Berikut adalah contoh lain fungsi yang tidak memiliki antiderivatif, sehingga integral tentunya hanya
% dapat dihitung dengan metode numerik.
>function f(x) &= x^x

                                   x
                                  x

>$showev('integrate(f(x),x,0,1))
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-105.png
% // latex: \int_{0}^{1}{x^{x}\;dx}=\int_{0}^{1}{x^{x}\;dx}
>x=0:0.1:1-0.01; plot2d(x,f(x+0.01),>bar); plot2d("f(x)",0,1,>add):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-106.png
% Maxima gagal menghitung integral tentu tersebut secara langsung menggunakan perintah
% integrate. Berikut kita lakukan seperti contoh sebelumnya untuk mendapat hasil atau
% pendekatan nilai integral tentu tersebut.
>t &= makelist(a,a,0,1-0.01,0.01);
>fx &= makelist(f(t[i]+0.01),i,1,length(t));
% maxima: 'integrate(f(x),x,0,1) = 0.01*sum(fx[i],i,1,length(fx))
% 
% Apakah hasil tersebut cukup baik? perhatikan gambarnya.
>function f(x) &= sin(3*x^5+7)^2

                               2    5
                            sin (3 x  + 7)

>integrate(f,0,1)
0.542581176074
>&showev('integrate(f(x),x,0,1))

         1                           1              pi
        /                      gamma(-) sin(14) sin(--)
        [     2    5                 5              10
        I  sin (3 x  + 7) dx = ------------------------
        ]                                  1/5
        /                              10 6
         0
       4/5                  1          4/5                  1
 - (((6    gamma_incomplete(-, 6 I) + 6    gamma_incomplete(-, - 6 I))
                            5                               5
             4/5                    1
 sin(14) + (6    I gamma_incomplete(-, 6 I)
                                    5
    4/5                    1                       pi
 - 6    I gamma_incomplete(-, - 6 I)) cos(14)) sin(--) - 60)/120
                           5                       10

>&float(%)

         1.0
        /
        [       2      5
        I    sin (3.0 x  + 7.0) dx = 
        ]
        /
         0.0
0.09820784258795788 - 0.008333333333333333
 (0.3090169943749474 (0.1367372182078336
 (4.192962712629476 I gamma__incomplete(0.2, 6.0 I)
 - 4.192962712629476 I gamma__incomplete(0.2, - 6.0 I))
 + 0.9906073556948704 (4.192962712629476 gamma__incomplete(0.2, 6.0 I)
 + 4.192962712629476 gamma__incomplete(0.2, - 6.0 I))) - 60.0)

>$showev('integrate(x*exp(-x),x,0,1)) // Integral tentu (eksak)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-107.png
% // latex: \int_{0}^{1}{x\,e^ {- x }\;dx}=1-2\,e^ {- 1 }
% * Aplikasi Integral Tentu
>plot2d("x^3-x",-0.1,1.1); plot2d("-x^2",>add);  ...
>b=solve("x^3-x+x^2",0.5); x=linspace(0,b,200); xi=flipx(x); ...
>plot2d(x|xi,x^3-x|-xi^2,>filled,style="|",fillcolor=1,>add): // Plot daerah antara 2 kurva
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-108.png
>a=solve("x^3-x+x^2",0), b=solve("x^3-x+x^2",1) // absis titik-titik potong kedua kurva
0
0.61803398875
>integrate("(-x^2)-(x^3-x)",a,b) // luas daerah yang diarsir
0.0758191713542
% Hasil tersebut akan kita bandingkan dengan perhitungan secara analitik.
>a &= solve((-x^2)-(x^3-x),x); $a // menentukan absis titik potong kedua kurva secara eksak
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-109.png
% // latex: \left[ x=\frac{-\sqrt{5}-1}{2} , x=\frac{\sqrt{5}-1}{2} , x=0   \right] 
>$showev('integrate(-x^2-x^3+x,x,0,(sqrt(5)-1)/2)) // Nilai integral secara eksak
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-110.png
% // latex: \int_{0}^{\frac{\sqrt{5}-1}{2}}{-x^3-x^2+x\;dx}=\frac{13-5^{\frac{3  }{2}}}{24}
>$float(%)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-111.png
% // latex: \int_{0.0}^{0.6180339887498949}{-1.0\,x^3-1.0\,x^2+x\;dx}=  0.07581917135421037
>
% ** Panjang Kurva
% 
% Hitunglah panjang kurva berikut ini dan luas daerah di dalam kurva tersebut.
% 
% latex: \gamma(t) = (r(t) \cos(t), r(t) \sin(t))
% 
% dengan
% 
% latex: r(t) = 1 + \dfrac{\sin(3t)}{2},\quad 0\le t\le 2\pi.
>t=linspace(0,2pi,1000); r=1+sin(3*t)/2; x=r*cos(t); y=r*sin(t); ...
>plot2d(x,y,>filled,fillcolor=red,style="/",r=1.5): // Kita gambar kurvanya terlebih dahulu
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-112.png
>function r(t) &= 1+sin(3*t)/2; $'r(t)=r(t)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-113.png
% // latex: r\left(\left[ 0 , 0.01 , 0.02 , 0.03 , 0.04 , 0.05 , 0.06 , 0.07 ,   0.08 , 0.09 , 0.1 , 0.11 , 0.12 , 0.13 , 0.14 , 0.15 , 0.16 , 0.17   , 0.18 , 0.19 , 0.2 , 0.21 , 0.2200000000000001 ,   0.2300000000000001 , 0.2400000000000001 , 0.2500000000000001 ,   0.2600000000000001 , 0.2700000000000001 , 0.2800000000000001 ,   0.2900000000000001 , 0.3000000000000001 , 0.3100000000000001 ,   0.3200000000000001 , 0.3300000000000001 , 0.3400000000000001 ,   0.3500000000000001 , 0.3600000000000002 , 0.3700000000000002 ,   0.3800000000000002 , 0.3900000000000002 , 0.4000000000000002 ,   0.4100000000000002 , 0.4200000000000002 , 0.4300000000000002 ,   0.4400000000000002 , 0.4500000000000002 , 0.4600000000000002 ,   0.4700000000000003 , 0.4800000000000003 , 0.4900000000000003 ,   0.5000000000000002 , 0.5100000000000002 , 0.5200000000000002 ,   0.5300000000000002 , 0.5400000000000003 , 0.5500000000000003 ,   0.5600000000000003 , 0.5700000000000003 , 0.5800000000000003 ,   0.5900000000000003 , 0.6000000000000003 , 0.6100000000000003 ,   0.6200000000000003 , 0.6300000000000003 , 0.6400000000000003 ,   0.6500000000000004 , 0.6600000000000004 , 0.6700000000000004 ,   0.6800000000000004 , 0.6900000000000004 , 0.7000000000000004 ,   0.7100000000000004 , 0.7200000000000004 , 0.7300000000000004 ,   0.7400000000000004 , 0.7500000000000004 , 0.7600000000000005 ,   0.7700000000000005 , 0.7800000000000005 , 0.7900000000000005 ,   0.8000000000000005 , 0.8100000000000005 , 0.8200000000000005 ,   0.8300000000000005 , 0.8400000000000005 , 0.8500000000000005 ,   0.8600000000000005 , 0.8700000000000006 , 0.8800000000000006 ,   0.8900000000000006 , 0.9000000000000006 , 0.9100000000000006 ,   0.9200000000000006 , 0.9300000000000006 , 0.9400000000000006 ,   0.9500000000000006 , 0.9600000000000006 , 0.9700000000000006 ,   0.9800000000000006 , 0.9900000000000007 \right] \right)=\left[ 1 ,   1.014997750101248 , 1.029982003239722 , 1.044939274599006 ,   1.05985610364446 , 1.0747190662368 , 1.089514786712912 ,   1.10422994992305 , 1.118851313213567 , 1.133365718344415 ,   1.14776010333067 , 1.162021514197434 , 1.176137116637545 ,   1.190094207561581 , 1.203880226529785 , 1.217482767055615 ,   1.230889587770742 , 1.244088623441454 , 1.257067995826556 ,   1.269816024366985 , 1.282321236697518 , 1.294572378971135 ,   1.306558425986717 , 1.318268591110984 , 1.329692335985737 ,   1.340819380011667 , 1.351639709600205 , 1.362143587185071 ,   1.37232155998543 , 1.382164468512753 , 1.391663454813742 ,   1.400809970441889 , 1.409595784150499 , 1.41801298930026 ,   1.426054010974682 , 1.433711612797009 , 1.440978903442474 ,   1.447849342840024 , 1.454316748057942 , 1.460375298868068 ,   1.466019542983613 , 1.471244400965849 , 1.476045170795258 ,   1.480417532103036 , 1.484357550059133 , 1.48786167891333 ,   1.49092676518618 , 1.493550050506925 , 1.495729174095843 ,   1.49746217488879 , 1.498747493302027 , 1.499583972635738 ,   1.499970860114983 , 1.499907807567145 , 1.499394871735262 ,   1.498432514226959 , 1.497021601099038 , 1.495163402078079 ,   1.492859589417777 , 1.490112236394023 , 1.486923815439098 ,   1.483297195916649 , 1.479235641539457 , 1.474742807432315 ,   1.469822736842662 , 1.464479857501934 , 1.458718977640905 ,   1.4525452816626 , 1.44596432547669 , 1.438982031499539 ,   1.431604683324436 , 1.423838920066784 , 1.415691730389341 ,   1.407170446212898 , 1.398282736118043 , 1.38903659844396 ,   1.379440354090461 , 1.369502639029735 , 1.359232396534563 ,   1.348638869129968 , 1.337731590275575 , 1.326520375786132 ,   1.315015314997945 , 1.303226761689157 , 1.29116532476204 ,   1.278841858695708 , 1.26626745377781 , 1.253453426124026 ,   1.240411307494323 , 1.227152834915152 , 1.213689940116914 ,   1.200034738796209 , 1.186199519712527 , 1.172196733629194 ,   1.158038982108526 , 1.143739006171271 , 1.129309674830555 ,   1.114763973510631 , 1.100114992360884 , 1.085375914475572 \right] 
>function fx(t) &= r(t)*cos(t); $'fx(t)=fx(t)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-114.png
% // latex: {\it fx}\left(\left[ 0 , 0.01 , 0.02 , 0.03 , 0.04 , 0.05 , 0.06 ,   0.07 , 0.08 , 0.09 , 0.1 , 0.11 , 0.12 , 0.13 , 0.14 , 0.15 , 0.16   , 0.17 , 0.18 , 0.19 , 0.2 , 0.21 , 0.2200000000000001 ,   0.2300000000000001 , 0.2400000000000001 , 0.2500000000000001 ,   0.2600000000000001 , 0.2700000000000001 , 0.2800000000000001 ,   0.2900000000000001 , 0.3000000000000001 , 0.3100000000000001 ,   0.3200000000000001 , 0.3300000000000001 , 0.3400000000000001 ,   0.3500000000000001 , 0.3600000000000002 , 0.3700000000000002 ,   0.3800000000000002 , 0.3900000000000002 , 0.4000000000000002 ,   0.4100000000000002 , 0.4200000000000002 , 0.4300000000000002 ,   0.4400000000000002 , 0.4500000000000002 , 0.4600000000000002 ,   0.4700000000000003 , 0.4800000000000003 , 0.4900000000000003 ,   0.5000000000000002 , 0.5100000000000002 , 0.5200000000000002 ,   0.5300000000000002 , 0.5400000000000003 , 0.5500000000000003 ,   0.5600000000000003 , 0.5700000000000003 , 0.5800000000000003 ,   0.5900000000000003 , 0.6000000000000003 , 0.6100000000000003 ,   0.6200000000000003 , 0.6300000000000003 , 0.6400000000000003 ,   0.6500000000000004 , 0.6600000000000004 , 0.6700000000000004 ,   0.6800000000000004 , 0.6900000000000004 , 0.7000000000000004 ,   0.7100000000000004 , 0.7200000000000004 , 0.7300000000000004 ,   0.7400000000000004 , 0.7500000000000004 , 0.7600000000000005 ,   0.7700000000000005 , 0.7800000000000005 , 0.7900000000000005 ,   0.8000000000000005 , 0.8100000000000005 , 0.8200000000000005 ,   0.8300000000000005 , 0.8400000000000005 , 0.8500000000000005 ,   0.8600000000000005 , 0.8700000000000006 , 0.8800000000000006 ,   0.8900000000000006 , 0.9000000000000006 , 0.9100000000000006 ,   0.9200000000000006 , 0.9300000000000006 , 0.9400000000000006 ,   0.9500000000000006 , 0.9600000000000006 , 0.9700000000000006 ,   0.9800000000000006 , 0.9900000000000007 \right] \right)=\left[ 1 ,   1.014947000636657 , 1.029776013705529 , 1.044469087191079 ,   1.059008331806833 , 1.073375947255439 , 1.087554248364218 ,   1.101525691055367 , 1.11527289811021 , 1.128778684687222 ,   1.142026083553954 , 1.154998369993414 , 1.16767908634602 ,   1.180052066148761 , 1.192101457833886 , 1.203811747950136 ,   1.215167783870255 , 1.226154795949382 , 1.236758419099762 ,   1.246964713748154 , 1.256760186143285 , 1.266131807981756 ,   1.275067035321848 , 1.283553826755846 , 1.29158066081265 ,   1.29913655256367 , 1.306211069406282 , 1.312794346000405 ,   1.318877098335118 , 1.324450636903608 , 1.329506878966172 ,   1.334038359882425 , 1.338038243495345 , 1.341500331551311 ,   1.344419072141793 , 1.346789567153917 , 1.348607578718725 ,   1.349869534647481 , 1.350572532848044 , 1.350714344714907 ,   1.350293417488142 , 1.349308875578123 , 1.347760520854542 ,   1.345648831899879 , 1.342974962229111 , 1.339740737479097 ,   1.335948651572729 , 1.331601861864506 , 1.326704183275865 ,   1.321260081430156 , 1.315274664798767 , 1.308753675871437 ,   1.301703481365363 , 1.294131061489226 , 1.286043998279732 ,   1.277450463029762 , 1.268359202828647 , 1.25877952623647 ,   1.248721288115691 , 1.238194873644713 , 1.227211181539273 ,   1.215781606508839 , 1.203918020976346 , 1.191632756090801 ,   1.17893858206338 , 1.165848687858719 , 1.152376660274093 ,   1.138536462440146 , 1.124342411777761 , 1.10980915744646 ,   1.094951657320579 , 1.079785154530145 , 1.064325153604093 ,   1.04858739625406 , 1.032587836837555 , 1.0163426175398 ,   0.999868043313951 , 0.9831805566197906 , 0.9662967120012925 ,   0.9492331505436565 , 0.932006574250646 , 0.9146337203831 ,   0.897131335799599 , 0.8795161513401855 , 0.8618048562939812 ,   0.8440140729913906 , 0.8261603315613344 , 0.8082600448937051 ,   0.7903294838468643 , 0.7723847527396025 , 0.754441765166499 ,   0.7365162201750889 , 0.7186235788426429 , 0.7007790412897039 ,   0.6829975241668103 , 0.6652936386500562 , 0.6476816689803099 ,   0.6301755515800127 , 0.6127888547805567 , 0.595534759192214 \right] 
>function fy(t) &= r(t)*sin(t); $'fy(t)=fy(t)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-115.png
% // latex: {\it fy}\left(\left[ 0 , 0.01 , 0.02 , 0.03 , 0.04 , 0.05 , 0.06 ,   0.07 , 0.08 , 0.09 , 0.1 , 0.11 , 0.12 , 0.13 , 0.14 , 0.15 , 0.16   , 0.17 , 0.18 , 0.19 , 0.2 , 0.21 , 0.2200000000000001 ,   0.2300000000000001 , 0.2400000000000001 , 0.2500000000000001 ,   0.2600000000000001 , 0.2700000000000001 , 0.2800000000000001 ,   0.2900000000000001 , 0.3000000000000001 , 0.3100000000000001 ,   0.3200000000000001 , 0.3300000000000001 , 0.3400000000000001 ,   0.3500000000000001 , 0.3600000000000002 , 0.3700000000000002 ,   0.3800000000000002 , 0.3900000000000002 , 0.4000000000000002 ,   0.4100000000000002 , 0.4200000000000002 , 0.4300000000000002 ,   0.4400000000000002 , 0.4500000000000002 , 0.4600000000000002 ,   0.4700000000000003 , 0.4800000000000003 , 0.4900000000000003 ,   0.5000000000000002 , 0.5100000000000002 , 0.5200000000000002 ,   0.5300000000000002 , 0.5400000000000003 , 0.5500000000000003 ,   0.5600000000000003 , 0.5700000000000003 , 0.5800000000000003 ,   0.5900000000000003 , 0.6000000000000003 , 0.6100000000000003 ,   0.6200000000000003 , 0.6300000000000003 , 0.6400000000000003 ,   0.6500000000000004 , 0.6600000000000004 , 0.6700000000000004 ,   0.6800000000000004 , 0.6900000000000004 , 0.7000000000000004 ,   0.7100000000000004 , 0.7200000000000004 , 0.7300000000000004 ,   0.7400000000000004 , 0.7500000000000004 , 0.7600000000000005 ,   0.7700000000000005 , 0.7800000000000005 , 0.7900000000000005 ,   0.8000000000000005 , 0.8100000000000005 , 0.8200000000000005 ,   0.8300000000000005 , 0.8400000000000005 , 0.8500000000000005 ,   0.8600000000000005 , 0.8700000000000006 , 0.8800000000000006 ,   0.8900000000000006 , 0.9000000000000006 , 0.9100000000000006 ,   0.9200000000000006 , 0.9300000000000006 , 0.9400000000000006 ,   0.9500000000000006 , 0.9600000000000006 , 0.9700000000000006 ,   0.9800000000000006 , 0.9900000000000007 \right] \right)=\left[ 0 ,   0.01014980833556662 , 0.02059826678292271 , 0.03134347622283015 ,   0.04238293991838228 , 0.05371356612987439 , 0.06533167172990376 ,   0.07723298681299934 , 0.08941266029246918 , 0.1018652664755576 ,   0.1145848126064173 , 0.1275647473648353 , 0.1407979703071057 ,   0.1542768422339107 , 0.1679931964685752 , 0.1819383510275811 ,   0.1961031216637831 , 0.2104778357613507 , 0.2250523470600841 ,   0.2398160511854019 , 0.2547579019589912 , 0.2698664284638497 ,   0.2851297528362152 , 0.3005356087557041 , 0.3160713606038417 ,   0.3317240232600813 , 0.3474802825033731 , 0.3633265159863522 ,   0.3792488147482899 , 0.3952330052320643 , 0.411264671769591 ,   0.4273291794993832 , 0.4434116976792021 , 0.4594972233561165 ,   0.4755706053556919 , 0.4916165685515136 , 0.5076197383757777 ,   0.5235646655312819 , 0.5394358508648145 , 0.5552177703616642 ,   0.5708949002207642 , 0.5864517419698421 , 0.6018728475798654 ,   0.6171428445380648 , 0.6322464608388652 , 0.6471685498521687 ,   0.6618941150286309 , 0.6764083344018014 , 0.6906965848473219 ,   0.704744466059751 , 0.7185378242080237 , 0.7320627752310482 ,   0.7453057277355214 , 0.7582534054586558 , 0.7708928692592016 ,   0.7832115386008901 , 0.7951972124932317 , 0.8068380898554457 ,   0.8181227892702304 , 0.8290403680950348 , 0.8395803408995157 ,   0.8497326971989371 , 0.8594879184543822 , 0.8688369943118147 ,   0.877771438053233 , 0.8862833012344233 , 0.894365187485098 ,   0.9020102654485477 , 0.9092122808393135 , 0.91596556759876 ,   0.9222650581299157 , 0.9281062925943645 , 0.9334854272555032 ,   0.9383992418539865 , 0.9428451460027243 , 0.9468211845903713 ,   0.9503260421838114 , 0.9533590464217597 , 0.9559201703932094 ,   0.9580100339960551 , 0.9596299042728891 , 0.9607816947225576 ,   0.9614679635877484 , 0.9616919111204768 , 0.9614573758289937 ,   0.9607688297112769 , 0.9596313724818526 , 0.9580507248003547 ,   0.9560332205117796 , 0.9535857979100135 , 0.950715990037748 ,   0.9474319140374602 , 0.9437422595696462 , 0.9396562763159917 ,   0.9351837605866338 , 0.9303350410521015 , 0.9251209636219332 ,   0.9195528754933222 , 0.9136426083945087 , 0.9074024610488752   \right] 
>function ds(t) &= trigreduce(radcan(sqrt(diff(fx(t),t)^2+diff(fy(t),t)^2))); $'ds(t)=ds(t)
Maxima said:
diff: second argument must be a variable; found errexp1
 -- an error. To debug this try: debugmode(true);

Error in:
... e(radcan(sqrt(diff(fx(t),t)^2+diff(fy(t),t)^2))); $'ds(t)=ds(t ...
                                                     ^
>$integrate(ds(x),x,0,2*pi) //panjang (keliling) kurva
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-116.png
% // latex: \int_{0}^{2\,\pi}{{\it ds}\left(x\right)\;dx}
% Maxima gagal melakukan perhitungan eksak integral tersebut.
% 
% Berikut kita hitung integralnya secara umerik dengan perintah EMT.
>integrate("ds(x)",0,2*pi)
Function ds not found.
Try list ... to find functions!
Error in expression: ds(x)
 %mapexpression1:
    return expr(x,args());
Error in map.
 %evalexpression:
    if maps then return %mapexpression1(x,f$;args());
gauss:
    if maps then y=%evalexpression(f$,a+h-(h*xn)',maps;args());
adaptivegauss:
    t1=gauss(f$,c,c+h;args(),=maps);
Try "trace errors" to inspect local variables after errors.
integrate:
    return adaptivegauss(f$,a,b,eps*1000;args(),=maps);
% Spiral Logaritmik
% 
% latex: x=e^{ax}\cos x,\ y=e^{ax}\sin x.
>a=0.1; plot2d("exp(a*x)*cos(x)","exp(a*x)*sin(x)",r=2,xmin=0,xmax=2*pi):
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-117.png
>&kill(a) // hapus expresi a

                                 done

>function fx(t) &= exp(a*t)*cos(t); $'fx(t)=fx(t)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-118.png
% // latex: {\it fx}\left(\left[ 0 , 0.01 , 0.02 , 0.03 , 0.04 , 0.05 , 0.06 ,   0.07 , 0.08 , 0.09 , 0.1 , 0.11 , 0.12 , 0.13 , 0.14 , 0.15 , 0.16   , 0.17 , 0.18 , 0.19 , 0.2 , 0.21 , 0.2200000000000001 ,   0.2300000000000001 , 0.2400000000000001 , 0.2500000000000001 ,   0.2600000000000001 , 0.2700000000000001 , 0.2800000000000001 ,   0.2900000000000001 , 0.3000000000000001 , 0.3100000000000001 ,   0.3200000000000001 , 0.3300000000000001 , 0.3400000000000001 ,   0.3500000000000001 , 0.3600000000000002 , 0.3700000000000002 ,   0.3800000000000002 , 0.3900000000000002 , 0.4000000000000002 ,   0.4100000000000002 , 0.4200000000000002 , 0.4300000000000002 ,   0.4400000000000002 , 0.4500000000000002 , 0.4600000000000002 ,   0.4700000000000003 , 0.4800000000000003 , 0.4900000000000003 ,   0.5000000000000002 , 0.5100000000000002 , 0.5200000000000002 ,   0.5300000000000002 , 0.5400000000000003 , 0.5500000000000003 ,   0.5600000000000003 , 0.5700000000000003 , 0.5800000000000003 ,   0.5900000000000003 , 0.6000000000000003 , 0.6100000000000003 ,   0.6200000000000003 , 0.6300000000000003 , 0.6400000000000003 ,   0.6500000000000004 , 0.6600000000000004 , 0.6700000000000004 ,   0.6800000000000004 , 0.6900000000000004 , 0.7000000000000004 ,   0.7100000000000004 , 0.7200000000000004 , 0.7300000000000004 ,   0.7400000000000004 , 0.7500000000000004 , 0.7600000000000005 ,   0.7700000000000005 , 0.7800000000000005 , 0.7900000000000005 ,   0.8000000000000005 , 0.8100000000000005 , 0.8200000000000005 ,   0.8300000000000005 , 0.8400000000000005 , 0.8500000000000005 ,   0.8600000000000005 , 0.8700000000000006 , 0.8800000000000006 ,   0.8900000000000006 , 0.9000000000000006 , 0.9100000000000006 ,   0.9200000000000006 , 0.9300000000000006 , 0.9400000000000006 ,   0.9500000000000006 , 0.9600000000000006 , 0.9700000000000006 ,   0.9800000000000006 , 0.9900000000000007 \right] \right)=\left[ 1 ,   0.9999500004166653\,e^{0.01\,a} , 0.9998000066665778\,e^{0.02\,a} ,   0.9995500337489875\,e^{0.03\,a} , 0.9992001066609779\,e^{0.04\,a} ,   0.9987502603949663\,e^{0.05\,a} , 0.9982005399352042\,e^{0.06\,a} ,   0.9975510002532796\,e^{0.07\,a} , 0.9968017063026194\,e^{0.08\,a} ,   0.9959527330119943\,e^{0.09\,a} , 0.9950041652780258\,e^{0.1\,a} ,   0.9939560979566968\,e^{0.11\,a} , 0.9928086358538663\,e^{0.12\,a} ,   0.9915618937147881\,e^{0.13\,a} , 0.9902159962126372\,e^{0.14\,a} ,   0.9887710779360422\,e^{0.15\,a} , 0.9872272833756269\,e^{0.16\,a} ,   0.9855847669095608\,e^{0.17\,a} , 0.9838436927881214\,e^{0.18\,a} ,   0.9820042351172703\,e^{0.19\,a} , 0.9800665778412416\,e^{0.2\,a} ,   0.9780309147241483\,e^{0.21\,a} , 0.9758974493306055\,e^{  0.2200000000000001\,a} , 0.9736663950053748\,e^{0.2300000000000001\,  a} , 0.9713379748520296\,e^{0.2400000000000001\,a} ,   0.9689124217106447\,e^{0.2500000000000001\,a} , 0.9663899781345132\,  e^{0.2600000000000001\,a} , 0.9637708963658905\,e^{  0.2700000000000001\,a} , 0.9610554383107709\,e^{0.2800000000000001\,  a} , 0.9582438755126972\,e^{0.2900000000000001\,a} ,   0.955336489125606\,e^{0.3000000000000001\,a} , 0.9523335698857134\,e  ^{0.3100000000000001\,a} , 0.9492354180824408\,e^{0.3200000000000001  \,a} , 0.9460423435283869\,e^{0.3300000000000001\,a} ,   0.9427546655283462\,e^{0.3400000000000001\,a} , 0.9393727128473789\,  e^{0.3500000000000001\,a} , 0.9358968236779348\,e^{  0.3600000000000002\,a} , 0.9323273456060344\,e^{0.3700000000000002\,  a} , 0.9286646355765101\,e^{0.3800000000000002\,a} ,   0.924909059857313\,e^{0.3900000000000002\,a} , 0.921060994002885\,e  ^{0.4000000000000002\,a} , 0.917120822816605\,e^{0.4100000000000002  \,a} , 0.9130889403123081\,e^{0.4200000000000002\,a} ,   0.9089657496748851\,e^{0.4300000000000002\,a} , 0.9047516632199634\,  e^{0.4400000000000002\,a} , 0.9004471023526768\,e^{  0.4500000000000002\,a} , 0.8960524975255252\,e^{0.4600000000000002\,  a} , 0.8915682881953289\,e^{0.4700000000000003\,a} ,   0.886994922779284\,e^{0.4800000000000003\,a} , 0.8823328586101213\,e  ^{0.4900000000000003\,a} , 0.8775825618903726\,e^{0.5000000000000002  \,a} , 0.8727445076457512\,e^{0.5100000000000002\,a} ,   0.8678191796776498\,e^{0.5200000000000002\,a} , 0.8628070705147609\,  e^{0.5300000000000002\,a} , 0.857708681363824\,e^{0.5400000000000003  \,a} , 0.8525245220595056\,e^{0.5500000000000003\,a} ,   0.847255111013416\,e^{0.5600000000000003\,a} , 0.8419009751622686\,e  ^{0.5700000000000003\,a} , 0.8364626499151868\,e^{0.5800000000000003  \,a} , 0.8309406791001633\,e^{0.5900000000000003\,a} ,   0.8253356149096781\,e^{0.6000000000000003\,a} , 0.8196480178454794\,  e^{0.6100000000000003\,a} , 0.8138784566625338\,e^{  0.6200000000000003\,a} , 0.8080275083121516\,e^{0.6300000000000003\,  a} , 0.8020957578842924\,e^{0.6400000000000003\,a} ,   0.7960837985490556\,e^{0.6500000000000004\,a} , 0.7899922314973649\,  e^{0.6600000000000004\,a} , 0.783821665880849\,e^{0.6700000000000004  \,a} , 0.7775727187509277\,e^{0.6800000000000004\,a} ,   0.7712460149971063\,e^{0.6900000000000004\,a} , 0.7648421872844882\,  e^{0.7000000000000004\,a} , 0.7583618759905079\,e^{  0.7100000000000004\,a} , 0.7518057291408947\,e^{0.7200000000000004\,  a} , 0.7451744023448701\,e^{0.7300000000000004\,a} ,   0.7384685587295876\,e^{0.7400000000000004\,a} , 0.7316888688738206\,  e^{0.7500000000000004\,a} , 0.7248360107409049\,e^{  0.7600000000000005\,a} , 0.7179106696109431\,e^{0.7700000000000005\,  a} , 0.7109135380122771\,e^{0.7800000000000005\,a} ,   0.7038453156522357\,e^{0.7900000000000005\,a} , 0.696706709347165\,e  ^{0.8000000000000005\,a} , 0.6894984329517466\,e^{0.8100000000000005  \,a} , 0.6822212072876132\,e^{0.8200000000000005\,a} ,   0.6748757600712667\,e^{0.8300000000000005\,a} , 0.6674628258413078\,  e^{0.8400000000000005\,a} , 0.6599831458849817\,e^{  0.8500000000000005\,a} , 0.6524374681640515\,e^{0.8600000000000005\,  a} , 0.6448265472400008\,e^{0.8700000000000006\,a} ,   0.6371511441985798\,e^{0.8800000000000006\,a} , 0.6294120265736964\,  e^{0.8900000000000006\,a} , 0.6216099682706641\,e^{  0.9000000000000006\,a} , 0.6137457494888111\,e^{0.9100000000000006\,  a} , 0.6058201566434623\,e^{0.9200000000000006\,a} ,   0.5978339822872978\,e^{0.9300000000000006\,a} , 0.5897880250310977\,  e^{0.9400000000000006\,a} , 0.581683089463883\,e^{0.9500000000000006  \,a} , 0.5735199860724561\,e^{0.9600000000000006\,a} ,   0.5652995311603538\,e^{0.9700000000000006\,a} , 0.5570225467662168\,  e^{0.9800000000000006\,a} , 0.548689860581587\,e^{0.9900000000000007  \,a} \right] 
>function fy(t) &= exp(a*t)*sin(t); $'fy(t)=fy(t)
 %image% 22305141038 - Mg. Ribka - EMTKalkulus-119.png
% // latex: {\it fy}\left(\left[ 0 , 0.01 , 0.02 , 0.03 , 0.04 , 0.05 , 0.06 ,   0.07 , 0.08 , 0.09 , 0.1 , 0.11 , 0.12 , 0.13 , 0.14 , 0.15 , 0.16   , 0.17 , 0.18 , 0.19 , 0.2 , 0.21 , 0.2200000000000001 ,   0.2300000000000001 , 0.2400000000000001 , 0.2500000000000001 ,   0.2600000000000001 , 0.2700000000000001 , 0.2800000000000001 ,   0.2900000000000001 , 0.3000000000000001 , 0.3100000000000001 ,   0.3200000000000001 , 0.3300000000000001 , 0.3400000000000001 ,   0.3500000000000001 , 0.3600000000000002 , 0.3700000000000002 ,   0.3800000000000002 , 0.3900000000000002 , 0.4000000000000002 ,   0.4100000000000002 , 0.4200000000000002 , 0.4300000000000002 ,   0.4400000000000002 , 0.4500000000000002 , 0.4600000000000002 ,   0.4700000000000003 , 0.4800000000000003 , 0.4900000000000003 ,   0.5000000000000002 , 0.5100000000000002 , 0.5200000000000002 ,   0.5300000000000002 , 0.5400000000000003 , 0.5500000000000003 ,   0.5600000000000003 , 0.5700000000000003 , 0.5800000000000003 ,   0.5900000000000003 , 0.6000000000000003 , 0.6100000000000003 ,   0.6200000000000003 , 0.6300000000000003 , 0.6400000000000003 ,   0.6500000000000004 , 0.6600000000000004 , 0.6700000000000004 ,   0.6800000000000004 , 0.6900000000000004 , 0.7000000000000004 ,   0.7100000000000004 , 0.7200000000000004 , 0.7300000000000004 ,   0.7400000000000004 , 0.7500000000000004 , 0.7600000000000005 ,   0.7700000000000005 , 0.7800000000000005 , 0.7900000000000005 ,   0.8000000000000005 , 0.8100000000000005 , 0.8200000000000005 ,   0.8300000000000005 , 0.8400000000000005 , 0.8500000000000005 ,   0.8600000000000005 , 0.8700000000000006 , 0.8800000000000006 ,   0.8900000000000006 , 0.9000000000000006 , 0.9100000000000006 ,   0.9200000000000006 , 0.9300000000000006 , 0.9400000000000006 ,   0.9500000000000006 , 0.9600000000000006 , 0.9700000000000006 ,   0.9800000000000006 , 0.9900000000000007 \right] \right)=\left[ 0 ,   0.009999833334166664\,e^{0.01\,a} , 0.01999866669333308\,e^{0.02\,a}   , 0.02999550020249566\,e^{0.03\,a} , 0.03998933418663416\,e^{0.04\,  a} , 0.04997916927067833\,e^{0.05\,a} , 0.0599640064794446\,e^{0.06  \,a} , 0.06994284733753277\,e^{0.07\,a} , 0.0799146939691727\,e^{  0.08\,a} , 0.08987854919801104\,e^{0.09\,a} , 0.09983341664682814\,e  ^{0.1\,a} , 0.1097783008371748\,e^{0.11\,a} , 0.1197122072889193\,e  ^{0.12\,a} , 0.1296341426196948\,e^{0.13\,a} , 0.1395431146442365\,e  ^{0.14\,a} , 0.1494381324735992\,e^{0.15\,a} , 0.159318206614246\,e  ^{0.16\,a} , 0.169182349066996\,e^{0.17\,a} , 0.1790295734258242\,e  ^{0.18\,a} , 0.1888588949765006\,e^{0.19\,a} , 0.1986693307950612\,e  ^{0.2\,a} , 0.2084598998460996\,e^{0.21\,a} , 0.2182296230808694\,e  ^{0.2200000000000001\,a} , 0.2279775235351885\,e^{0.2300000000000001  \,a} , 0.2377026264271347\,e^{0.2400000000000001\,a} ,   0.247403959254523\,e^{0.2500000000000001\,a} , 0.2570805518921552\,e  ^{0.2600000000000001\,a} , 0.2667314366888312\,e^{0.2700000000000001  \,a} , 0.2763556485641138\,e^{0.2800000000000001\,a} ,   0.2859522251048356\,e^{0.2900000000000001\,a} , 0.2955202066613397\,  e^{0.3000000000000001\,a} , 0.3050586364434436\,e^{  0.3100000000000001\,a} , 0.3145665606161179\,e^{0.3200000000000001\,  a} , 0.3240430283948685\,e^{0.3300000000000001\,a} ,   0.3334870921408145\,e^{0.3400000000000001\,a} , 0.3428978074554515\,  e^{0.3500000000000001\,a} , 0.3522742332750901\,e^{  0.3600000000000002\,a} , 0.3616154319649622\,e^{0.3700000000000002\,  a} , 0.3709204694129828\,e^{0.3800000000000002\,a} ,   0.3801884151231616\,e^{0.3900000000000002\,a} , 0.3894183423086507\,  e^{0.4000000000000002\,a} , 0.3986093279844231\,e^{  0.4100000000000002\,a} , 0.4077604530595704\,e^{0.4200000000000002\,  a} , 0.416870802429211\,e^{0.4300000000000002\,a} ,   0.4259394650659998\,e^{0.4400000000000002\,a} , 0.4349655341112304\,  e^{0.4500000000000002\,a} , 0.44394810696552\,e^{0.4600000000000002  \,a} , 0.4528862853790685\,e^{0.4700000000000003\,a} ,   0.4617791755414831\,e^{0.4800000000000003\,a} , 0.4706258881711582\,  e^{0.4900000000000003\,a} , 0.4794255386042032\,e^{  0.5000000000000002\,a} , 0.4881772468829077\,e^{0.5100000000000002\,  a} , 0.4968801378437369\,e^{0.5200000000000002\,a} ,   0.5055333412048472\,e^{0.5300000000000002\,a} , 0.5141359916531133\,  e^{0.5400000000000003\,a} , 0.5226872289306594\,e^{  0.5500000000000003\,a} , 0.5311861979208836\,e^{0.5600000000000003\,  a} , 0.5396320487339695\,e^{0.5700000000000003\,a} ,   0.5480239367918738\,e^{0.5800000000000003\,a} , 0.556361022912784\,e  ^{0.5900000000000003\,a} , 0.5646424733950356\,e^{0.6000000000000003  \,a} , 0.5728674601004815\,e^{0.6100000000000003\,a} ,   0.5810351605373053\,e^{0.6200000000000003\,a} , 0.5891447579422698\,  e^{0.6300000000000003\,a} , 0.5971954413623923\,e^{  0.6400000000000003\,a} , 0.6051864057360399\,e^{0.6500000000000004\,  a} , 0.6131168519734341\,e^{0.6600000000000004\,a} ,   0.6209859870365599\,e^{0.6700000000000004\,a} , 0.6287930240184688\,  e^{0.6800000000000004\,a} , 0.6365371822219682\,e^{  0.6900000000000004\,a} , 0.6442176872376913\,e^{0.7000000000000004\,  a} , 0.651833771021537\,e^{0.7100000000000004\,a} ,   0.6593846719714734\,e^{0.7200000000000004\,a} , 0.6668696350036982\,  e^{0.7300000000000004\,a} , 0.6742879116281454\,e^{  0.7400000000000004\,a} , 0.6816387600233345\,e^{0.7500000000000004\,  a} , 0.6889214451105516\,e^{0.7600000000000005\,a} ,   0.696135238627357\,e^{0.7700000000000005\,a} , 0.7032794192004105\,e  ^{0.7800000000000005\,a} , 0.7103532724176082\,e^{0.7900000000000005  \,a} , 0.7173560908995231\,e^{0.8000000000000005\,a} ,   0.7242871743701429\,e^{0.8100000000000005\,a} , 0.7311458297268962\,  e^{0.8200000000000005\,a} , 0.7379313711099631\,e^{  0.8300000000000005\,a} , 0.7446431199708596\,e^{0.8400000000000005\,  a} , 0.751280405140293\,e^{0.8500000000000005\,a} ,   0.7578425628952773\,e^{0.8600000000000005\,a} , 0.7643289370255054\,  e^{0.8700000000000006\,a} , 0.7707388788989696\,e^{  0.8800000000000006\,a} , 0.7770717475268242\,e^{0.8900000000000006\,  a} , 0.7833269096274837\,e^{0.9000000000000006\,a} ,   0.7895037396899508\,e^{0.9100000000000006\,a} , 0.7956016200363664\,  e^{0.9200000000000006\,a} , 0.8016199408837775\,e^{  0.9300000000000006\,a} , 0.8075581004051147\,e^{0.9400000000000006\,  a} , 0.8134155047893741\,e^{0.9500000000000006\,a} ,   0.8191915683009986\,e^{0.9600000000000006\,a} , 0.8248857133384504\,  e^{0.9700000000000006\,a} , 0.8304973704919708\,e^{  0.9800000000000006\,a} , 0.8360259786005209\,e^{0.9900000000000007\,  a} \right] 
>function df(t) &= trigreduce(radcan(sqrt(diff(fx(t),t)^2+diff(fy(t),t)^2))); $'df(t)=df(t)
Maxima said:
diff: second argument must be a variable; found errexp1
 -- an error. To debug this try: debugmode(true);

Error in:
... e(radcan(sqrt(diff(fx(t),t)^2+diff(fy(t),t)^2))); $'df(t)=df(t ...
                                                     ^
>S &=integrate(df(t),t,0,2*%pi); $S // panjang kurva (spiral)
>S(a=0.1) // Panjang kurva untuk a=0.1
8.78817491636
% Soal:
% 
% Tunjukkan bahwa keliling lingkaran dengan jari-jari r adalah K=2.pi.r.
% 
% Berikut adalah contoh menghitung panjang parabola.
>plot2d("x^2",xmin=-1,xmax=1):
>$showev('integrate(sqrt(1+diff(x^2,x)^2),x,-1,1))
>$float(%)
>x=-1:0.2:1; y=x^2; plot2d(x,y);  ...
>  plot2d(x,y,points=1,style="o#",add=1):
% Panjang tersebut dapat dihampiri dengan menggunakan jumlah panjang ruas-ruas garis yang menghubungkan titik-titik pada parabola
% tersebut.
>i=1:cols(x)-1; sum(sqrt((x[i+1]-x[i])^2+(y[i+1]-y[i])^2))
2.95191957027
% Hasilnya mendekati panjang yang dihitung secara eksak. Untuk mendapatkan hampiran yang cukup akurat, jarak antar titik dapat
% diperkecil, misalnya 0.1, 0.05, 0.01, dan seterusnya. Cobalah Anda ulangi perhitungannya dengan nilai-nilai tersebut.
% 
% ** Koordinat Kartesius
% 
% Berikut diberikan contoh perhitungan panjang kurva menggunakan koordinat Kartesius. Kita akan hitung panjang kurva dengan
% persamaan implisit:
% 
% latex: x^3+y^3-3xy=0.
>z &= x^3+y^3-3*x*y; $z
>plot2d(z,r=2,level=0,n=100):
% Kita tertarik pada kurva di kuadran pertama.
>plot2d(z,a=0,b=2,c=0,d=2,level=[-10;0],n=100,contourwidth=3,style="/"):
% Kita selesaikan persamaannya untuk x.
>$z with y=l*x, sol &= solve(%,x); $sol
% Kita gunakan solusi tersebut untuk mendefinisikan fungsi dengan Maxima.
>function f(l) &= rhs(sol[1]); $'f(l)=f(l)
% Fungsi tersebut juga dapat digunaka untuk menggambar kurvanya. Ingat, bahwa fungsi tersebut adalah nilai x dan nilai y=l*x, yakni
% x=f(l) dan y=l*f(l).
>plot2d(&f(x),&x*f(x),xmin=-0.5,xmax=2,a=0,b=2,c=0,d=2,r=1.5):
% Elemen panjang kurva adalah:
% 
% latex: ds=\sqrt{f'(l)^2+(lf'(l)+f(l))^2}.
>function ds(l) &= ratsimp(sqrt(diff(f(l),l)^2+diff(l*f(l),l)^2)); $'ds(l)=ds(l)
>$integrate(ds(l),l,0,1)
% Integral tersebut tidak dapat dihitung secara eksak menggunakan Maxima. Kita hitung integral etrsebut secara numerik dengan Euler.
% Karena kurva simetris, kita hitung untuk nilai variabel integrasi dari 0 sampai 1, kemudian hasilnya dikalikan 2. 
>2*integrate("ds(x)",0,1)
4.91748872168
>2*romberg(&ds(x),0,1)// perintah Euler lain untuk menghitung nilai hampiran integral yang sama
4.91748872168
% Perhitungan di datas dapat dilakukan untuk sebarang fungsi x dan y dengan mendefinisikan fungsi EMT, misalnya kita beri nama
% panjangkurva. Fungsi ini selalu memanggil Maxima untuk menurunkan fungsi yang diberikan.
>function panjangkurva(fx,fy,a,b) ...
$ds=mxm("sqrt(diff(@fx,x)^2+diff(@fy,x)^2)");
$return romberg(ds,a,b);
$endfunction
>panjangkurva("x","x^2",-1,1) // cek untuk menghitung panjang kurva parabola sebelumnya
2.95788571509
% Bandingkan dengan nilai eksak di atas.
>2*panjangkurva(mxm("f(x)"),mxm("x*f(x)"),0,1) // cek contoh terakhir, bandingkan hasilnya!
4.91748872168
% Kita hitung panjang spiral Archimides berikut ini dengan fungsi tersebut.
>plot2d("x*cos(x)","x*sin(x)",xmin=0,xmax=2*pi,square=1):
>panjangkurva("x*cos(x)","x*sin(x)",0,2*pi)
21.2562941482
% Berikut kita definisikan fungsi yang sama namun dengan Maxima, untuk perhitungan eksak.
>&kill(ds,x,fx,fy)

                                                               done

>function ds(fx,fy) &&= sqrt(diff(fx,x)^2+diff(fy,x)^2)

                                                         2              2
                                                sqrt(diff (fy, x) + diff (fx, x))

>sol &= ds(x*cos(x),x*sin(x)); $sol // Kita gunakan untuk menghitung panjang kurva terakhir di atas
>$sol | trigreduce | expand, $integrate(%,x,0,2*pi), %()
21.2562941482
% Hasilnya sama dengan perhitungan menggunakan fungsi EMT.
% 
% Berikut adalah contoh lain penggunaan fungsi Maxima tersebut.
>plot2d("3*x^2-1","3*x^3-1",xmin=-1/sqrt(3),xmax=1/sqrt(3),square=1):
>sol &= radcan(ds(3*x^2-1,3*x^3-1)); $sol
>$showev('integrate(sol,x,0,1/sqrt(3))), $2*float(%) // panjang kurva di atas
>
% ** Sikloid
% 
% Berikut kita akan menghitung panjang kurva lintasan (sikloid) suatu titik pada lingkaran yang berputar ke kanan pada permukaan
% datar. Misalkan jari-jari lingkaran tersebut adalah r. Posisi titik pusat lingkaran pada saat t adalah:
% 
% latex: (rt,r).
% 
% Misalkan posisi titik pada lingkaran tersebut mula-mula (0,0) dan posisinya pada saat t adalah:
% 
% latex: (r(t-\sin(t)),r(1-\cos(t))).
% 
% Berikut kita plot lintasan tersebut dan beberapa posisi lingkaran ketika t=0, t=pi/2, t=r*pi.
>x &= r*(t-sin(t))

                                                          r (t - sin(t))

>y &= r*(1-cos(t))

                                                          r (1 - cos(t))

>
% Berikut kita gambar sikloid untuk r=1.
>ex &= x-sin(x); ey &= 1-cos(x); aspect(1);
>plot2d(ex,ey,xmin=0,xmax=4pi,square=1); ...
>  plot2d("2+cos(x)","1+sin(x)",xmin=0,xmax=2pi,>add,color=blue); ...
>  plot2d([2,ex(2)],[1,ey(2)],color=red,>add); ...
>  plot2d(ex(2),ey(2),>points,>add,color=red); ...
>  plot2d("2pi+cos(x)","1+sin(x)",xmin=0,xmax=2pi,>add,color=blue); ...
>  plot2d([2pi,ex(2pi)],[1,ey(2pi)],color=red,>add);  ...
>  plot2d(ex(2pi),ey(2pi),>points,>add,color=red):
% Berikut dihitung panjang lintasan untuk 1 putaran penuh. (Jangan salah menduga bahwa panjang lintasan 1 putaran penuh sama dengan
% keliling lingkaran!)
>ds &= radcan(sqrt(diff(ex,x)^2+diff(ey,x)^2)); $ds=trigsimp(ds) // elemen panjang kurva sikloid
>ds &= trigsimp(ds); $ds
>$showev('integrate(ds,x,0,2*pi)) // hitung panjang sikloid satu putaran penuh
>integrate(mxm("ds"),0,2*pi) // hitung secara numerik
8
>romberg(mxm("ds"),0,2*pi) // cara lain hitung secara numerik
8
% Perhatikan, seperti terlihat pada gambar, panjang sikloid lebih besar daripada keliling lingkarannya, yakni:
% 
% latex: 2\pi.
>
>
% ** Kurvatur (Kelengkungan) Kurva
% 
% image: Osculating.png
% 
% Aslinya, kelengkungan kurva diferensiabel (yakni, kurva mulus yang tidak lancip) di titik P didefinisikan melalui lingkaran
% oskulasi (yaitu, lingkaran yang melalui titik P dan terbaik memperkirakan, paling banyak menyinggung kurva di sekitar P). Pusat
% dan radius kelengkungan kurva di P adalah pusat dan radius lingkaran oskulasi. Kelengkungan adalah kebalikan dari radius
% kelengkungan:
% 
% latex: \kappa =\frac {1}{R}
% 
% dengan R adalah radius kelengkungan. (Setiap lingkaran memiliki kelengkungan ini pada setiap titiknya, dapat diartikan, setiap
% lingkaran berputar 2pi sejauh 2piR.)
%% Definisi ini sulit dimanipulasi dan dinyatakan ke dalam rumus untuk kurva umum. Oleh karena itu digunakan definisi lain yang
% ekivalen.
% 
% ** Definisi Kurvatur dengan Fungsi Parametrik Panjang Kurva
%% Setiap kurva diferensiabel dapat dinyatakan dengan persamaan parametrik terhadap panjang kurva s:
% 
% latex: \gamma(s) = (x(s),\ y(s)),
% 
% dengan x dan y adalah fungsi riil yang diferensiabel, yang memenuhi:
% 
% latex: \|\gamma'(s)\|=\sqrt{x'(s)^2+y'(s)^2}=1.
% 
% 
% Ini berarti bahwa vektor singgung
% 
% 
% latex: \mathbf{T}(s)=(x'(s),\ y'(s))
% 
% 
% memiliki norm 1 dan merupakan vektor singgung satuan.
% 
% Apabila kurvanya memiliki turunan kedua, artinya turunan kedua x dan y ada, maka T'(s) ada. Vektor ini merupakan normal kurva yang
% arahnya menuju pusat kurvatur, norm-nya merupakan nilai kurvatur (kelengkungan):
% 
% latex:  \begin{aligned}\mathbf{T}(s) &= \mathbf{\gamma}'(s),\\ \mathbf{T}^{2}(s) &=1\ \text{(konstanta)}\Rightarrow \mathbf{T}'(s)\cdot \mathbf{T}(s)=0\\ \kappa(s) &=\|\mathbf {T}'(s)\|= \|\mathbf{\gamma}''(s)\|=\sqrt{x''(s)^{2}+y''(s)^{2}}.\end{aligned}
% 
% Nilai
% 
% latex: R(s)=\frac{1}{\kappa(s)}
% 
% disebut jari-jari (radius) kelengkungan kurva.
% 
% Bilangan riil
% 
% latex:  k(s) = \pm\kappa(s)
% 
% disebut nilai kelengkungan bertanda.
% 
% Contoh:
%% Akan ditentukan kurvatur lingkaran
% 
% latex: x=r\cos t,\ y= r\sin t.
>fx &= r*cos(t); fy &=r*sin(t);
>&assume(t>0,r>0); s &=integrate(sqrt(diff(fx,t)^2+diff(fy,t)^2),t,0,t); s // elemen panjang kurva, panjang busur lingkaran (s)

                                                               r t

>&kill(s); fx &= r*cos(s/r); fy &=r*sin(s/r); // definisi ulang persamaan parametrik terhadap s dengan substitusi t=s/r
>k &= trigsimp(sqrt(diff(fx,s,2)^2+diff(fy,s,2)^2)); $k // nilai kurvatur lingkaran dengan menggunakan definisi di atas
>
% Untuk representasi parametrik umum, misalkan
% 
% latex: x = x(t),\ y= y(t)
% 
% merupakan persamaan parametrik untuk kurva bidang yang terdiferensialkan dua kali. Kurvatur untuk kurva tersebut didefinisikan
% sebagai
% 
% latex: \begin{aligned}\kappa &= \frac{d\phi}{ds}=\frac{\frac{d\phi}{dt}}{\frac{ds}{dt}}\quad (\phi \text{ adalah sudut kemiringan garis singgung dan }s \text{ adalah panjang kurva})\\ &=\frac{\frac{d\phi}{dt}}{\sqrt{(\frac{dx}{dt})^2+(\frac{dy}{dt})^2}}= \frac{\frac{d\phi}{dt}}{\sqrt{x'(t)^2+y'(t)^2}}.\end{aligned}.
% 
% Selanjutnya, pembilang pada persamaan di atas dapat dicari sebagai berikut.
% 
% latex: \begin{aligned}\sec^2\phi\frac{d\phi}{dt} &= \frac{d}{dt}\left(\tan\phi\right)= \frac{d}{dt}\left(\frac{dy}{dx}\right)= \frac{d}{dt}\left(\frac{dy/dt}{dx/dt}\right)= \frac{d}{dt}\left(\frac{y'(t)}{x'(t)}\right)=\frac{x'(t)y''(t)-x''(t)y'(t)}{x'(t)^2}.\\ & \\ \frac{d\phi}{dt} &= \frac{1}{\sec^2\phi}\frac{x'(t)y''(t)-x''(t)y'(t)}{x'(t)^2}\\ &= \frac{1}{1+\tan^2\phi}\frac{x'(t)y''(t)-x''(t)y'(t)}{x'(t)^2}\\ &= \frac{1}{1+\left(\frac{y'(t)}{x'(t)}\right)^2}\frac{x'(t)y''(t)-x''(t)y'(t)}{x'(t)^2}\\ &= \frac{x'(t)y''(t)-x''(t)y'(t)}{x'(t)^2+y'(t)^2}.\end{aligned}
% 
% Jadi, rumus kurvatur untuk kurva parametrik
% 
% latex: x=x(t),\ y=y(t)
% 
% adalah
% 
% latex: \kappa(t) = \frac{x'(t)y''(t)-x''(t)y'(t)}{\left(x'(t)^2+y'(t)^2\right)^{3/2}}.
>
% Jika kurvanya dinyatakan dengan persamaan parametrik pada koordinat kutub
% 
% latex: x=r(\theta)\cos\theta,\ y=r(\theta)\sin\theta,
% 
% maka rumus kurvaturnya adalah
% 
% latex: \kappa(\theta) = \frac{r(\theta)^2+2r'(\theta)^2-r(\theta)r''(\theta)}{\left(r'(\theta)^2+r'(\theta)^2\right)^{3/2}}.
% 
% (Silakan Anda turunkan rumus tersebut!)
% 
% Contoh:
%% Lingkaran dengan pusat (0,0) dan jari-jari r dapat dinyatakan dengan persamaan parametrik
% 
% latex: x=r\cos t,\ y=r\sin t.
% 
% Nilai kelengkungan lingkaran tersebut adalah
% 
% latex: \kappa(t)=\frac{x'(t)y''(t)-x''(t)y'(t)}{\left(x'(t)^2+y'(t)^2\right)^{3/2}}=\frac{r^2}{r^3}=\frac 1 r.
% 
% Hasil cocok dengan definisi kurvatur suatu kelengkungan.
>
% Kurva
% 
% latex: y=f(x)
% 
% dapat dinyatakan ke dalam persamaan parametrik
% 
% latex: x=t,\ y=f(t),\ \text{ dengan } x'(t)=1,\ x''(t)=0,
% 
% sehingga kurvaturnya adalah
% 
% latex: \kappa(t) = \frac{y''(t)}{\left(1+y'(t)^2\right)^{3/2}}.
% 
% Contoh:
%% Akan ditentukan kurvatur parabola
% 
% latex: y=ax^2+bx+c.
>function f(x) &= a*x^2+b*x+c; $y=f(x)
>function k(x) &= (diff(f(x),x,2))/(1+diff(f(x),x)^2)^(3/2); $'k(x)=k(x) // kelengkungan parabola 
>function f(x) &= x^2+x+1; $y=f(x) // akan kita plot kelengkungan parabola untuk a=b=c=1
>function k(x) &= (diff(f(x),x,2))/(1+diff(f(x),x)^2)^(3/2); $'k(x)=k(x) // kelengkungan parabola 
% Berikut kita gambar parabola tersebut beserta kurva kelengkungan, kurva jari-jari kelengkungan dan salah satu lingkaran oskulasi
% di titik puncak parabola. Perhatikan, puncak parabola dan jari-jari lingkaran oskulasi di puncak parabola adalah
% 
% latex: (-1/2,3/4),\ 1/k(2)=1/2,
% 
% sehingga pusat lingkaran oskulasi adalah (-1/2, 5/4).
>plot2d(["f(x)", "k(x)"],-2,1, color=[blue,red]); plot2d("1/k(x)",-1.5,1,color=green,>add); ...
>plot2d("-1/2+1/k(-1/2)*cos(x)","5/4+1/k(-1/2)*sin(x)",xmin=0,xmax=2pi,>add,color=blue):
% Untuk kurva yang dinyatakan dengan fungsi implisit
% 
% latex: F(x,y)=0
% 
% dengan turunan-turunan parsial
% 
% latex: F_x=\frac{\partial F}{\partial x},\ F_y=\frac{\partial F}{\partial y},\ F_{xy}=\frac{\partial}{\partial y}\left(\frac{\partial F}{\partial x}\right),\ F_{xx}=\frac{\partial}{\partial x}\left(\frac{\partial F}{\partial x}\right),\ F_{yy}=\frac{\partial}{\partial y}\left(\frac{\partial F}{\partial y}\right),
% 
% berlaku
% 
% latex: F_x dx+ F_y dy = 0\text{ atau } \frac{dy}{dx}=-\frac{F_x}{F_y},
% 
% sehingga kurvaturnya adalah
% 
% latex: \kappa =\frac {F_y^2F_{xx}-2F_xF_yF_{xy}+F_x^2F_{yy}}{\left(F_x^2+F_y^2\right)^{3/2}}.
% 
% (Silakan Anda turunkan sendiri!)
% 
% Contoh 1:
%% Parabola 
% 
% latex: y=ax^2+bx+c
% 
% dapat dinyatakan ke dalam persamaan implisit
% 
% latex: ax^2+bx+c-y=0.
>function F(x,y) &=a*x^2+b*x+c-y; $F(x,y)
>Fx &= diff(F(x,y),x), Fxx &=diff(F(x,y),x,2), Fy &=diff(F(x,y),y), Fxy &=diff(diff(F(x,y),x),y), Fyy &=diff(F(x,y),y,2)  

                                                            2 a x + b


                                                               2 a


                                                               - 1


                                                                0


                                                                0

>function k(x) &= (Fy^2*Fxx-2*Fx*Fy*Fxy+Fx^2*Fyy)/(Fx^2+Fy^2)^(3/2); $'k(x)=k(x) // kurvatur parabola tersebut
% Hasilnya sama dengan sebelumnya yang menggunakan persamaan parabola biasa.
>
% * Barisan dan Deret
% 
% (Catatan: bagian ini belum lengkap. Anda dapat membaca contoh-contoh pengguanaan EMT dan
% Maxima untuk menghitung limit barisan, rumus jumlah parsial suatu deret, jumlah tak hingga
% suatu deret konvergen, dan sebagainya. Anda dapat mengeksplor contoh-contoh di EMT atau
% perbagai panduan penggunaan Maxima di software Maxima atau dari Internet.)
% 
% Barisan dapat didefinisikan dengan beberapa cara di dalam EMT, di antaranya:
% 
% - dengan cara yang sama seperti mendefinisikan vektor dengan elemen-elemen beraturan
% (menggunakan titik dua ":");
%% - menggunakan perintah "sequence" dan rumus barisan (suku ke -n);
%% - menggunakan perintah "iterate" atau "niterate";
%% - menggunakan fungsi Maxima "create_list" atau "makelist" untuk menghasilkan barisan
% simbolik;
%% - menggunakan fungsi biasa yang inputnya vektor atau barisan;
%% - menggunakan fungsi rekursif.
% 
% EMT menyediakan beberapa perintah (fungsi) terkait barisan, yakni:
% 
% - sum: menghitung jumlah semua elemen suatu barisan
%% - cumsum: jumlah kumulatif suatu barisan
%% - differences: selisih antar elemen-elemen berturutan
% 
% EMT juga dapat digunakan untuk menghitung jumlah deret berhingga maupun deret tak hingga,
% dengan menggunakan perintah (fungsi) "sum". Perhitungan dapat dilakukan secara numerik
% maupun simbolik dan eksak.
% 
% Berikut adalah beberapa contoh perhitungan barisan dan deret menggunakan EMT.
>1:10 // barisan sederhana
[1,  2,  3,  4,  5,  6,  7,  8,  9,  10]
>1:2:30
[1,  3,  5,  7,  9,  11,  13,  15,  17,  19,  21,  23,  25,  27,  29]
% * Iterasi dan Barisan
% 
% EMT menyediakan fungsi iterate("g(x)", x0, n) untuk melakukan iterasi
% 
% latex: x_{k+1}=g(x_k), \ x_0=x_0, k= 1, 2, 3, ..., n.
% 
% Berikut ini disajikan contoh-contoh penggunaan iterasi dan rekursi dengan EMT. Contoh
% pertama menunjukkan pertumbuhan dari nilai awal 1000 dengan laju pertambahan 5%, selama 10
% periode.
>q=1.05; iterate("x*q",1000,n=10)'
         1000 
         1050 
       1102.5 
      1157.63 
      1215.51 
      1276.28 
       1340.1 
       1407.1 
      1477.46 
      1551.33 
      1628.89 
% Contoh berikutnya memperlihatkan bahaya menabung di bank pada masa sekarang! Dengan bunga
% tabungan sebesar 6% per tahun atau 0.5% per bulan dipotong pajak 20%, dan biaya administrasi
% 10000 per bulan, tabungan sebesar 1 juta tanpa diambil selama sekitar 10 tahunan akan habis
% diambil oleh bank!
>r=0.005; plot2d(iterate("(1+0.8*r)*x-10000",1000000,n=130)):
% Silakan Anda coba-coba, dengan tabungan minimal berapa agar tidak akan habis diambil oleh
% bank dengan ketentuan bunga dan biaya administrasi seperti di atas.
% 
% Berikut adalah perhitungan minimal tabungan agar aman di bank dengan bunga sebesar r dan
% biaya administrasi a, pajak bunga 20%.
>$solve(0.8*r*A-a,A), $% with [r=0.005, a=10] 
% Berikut didefinisikan fungsi untuk menghitung saldo tabungan, kemudian dilakukan iterasi.
>function saldo(x,r,a) := round((1+0.8*r)*x-a,2);
>iterate({{"saldo",0.005,10}},1000,n=6)
[1000,  994,  987.98,  981.93,  975.86,  969.76,  963.64]
>iterate({{"saldo",0.005,10}},2000,n=6)
[2000,  1998,  1995.99,  1993.97,  1991.95,  1989.92,  1987.88]
>iterate({{"saldo",0.005,10}},2500,n=6)
[2500,  2500,  2500,  2500,  2500,  2500,  2500]
% Tabungan senilai 2,5 juta akan aman dan tidak akan berubah nilai (jika tidak ada penarikan),
% sedangkan jika tabungan awal kurang dari 2,5 juta, lama kelamaan akan berkurang meskipun
% tidak pernah dilakukan penarikan uang tabungan.
>iterate({{"saldo",0.005,10}},3000,n=6)
[3000,  3002,  3004.01,  3006.03,  3008.05,  3010.08,  3012.12]
% Tabungan yang lebih dari 2,5 juta baru akan bertambah jika tidak ada penarikan.
% 
% Untuk barisan yang lebih kompleks dapat digunakan fungsi "sequence()". Fungsi ini menghitung
% nilai-nilai x[n] dari semua nilai sebelumnya, x[1],...,x[n-1] yang diketahui.
%% Berikut adalah contoh barisan Fibonacci.
% 
% latex: x_n = x_{n-1}+x_{n-2}, \quad x_1=1, \quad x_2 =1
>sequence("x[n-1]+x[n-2]",[1,1],15)
[1,  1,  2,  3,  5,  8,  13,  21,  34,  55,  89,  144,  233,  377,  610]
% Barisan Fibonacci memiliki banyak sifat menarik, salah satunya adalah akar pangkat ke-n suku
% ke-n akan konvergen ke pecahan emas:
>$'(1+sqrt(5))/2=float((1+sqrt(5))/2)
>plot2d(sequence("x[n-1]+x[n-2]",[1,1],250)^(1/(1:250))):
% Barisan yang sama juga dapat dihasilkan dengan menggunakan loop.
>x=ones(500); for k=3 to 500; x[k]=x[k-1]+x[k-2]; end;
% Rekursi dapat dilakukan dengan menggunakan rumus yang tergantung pada semua elemen
% sebelumnya. Pada contoh berikut, elemen ke-n merupakan jumlah (n-1) elemen sebelumnya,
% dimulai dengan 1 (elemen ke-1). Jelas, nilai elemen ke-n adalah 2^(n-2), untuk n=2, 4, 5,
% ....
>sequence("sum(x)",1,10)
[1,  1,  2,  4,  8,  16,  32,  64,  128,  256]
% Selain menggunakan ekspresi dalam x dan n, kita juga dapat menggunakan fungsi.
% 
% Pada contoh berikut, digunakan iterasi
% 
% latex: x_n =A \cdot x_{n-1},
% 
% dengan A suatu matriks 2x2, dan setiap x[n] merupakan matriks/vektor 2x1.
>
>A=[1,1;1,2]; function suku(x,n) := A.x[,n-1]
>sequence("suku",[1;1],6)
            1             2             5            13            34            89 
            1             3             8            21            55           144 
% Hasil yang sama juga dapat diperoleh dengan menggunakan fungsi perpangkatan matriks
% "matrixpower()". Cara ini lebih cepat, karena hanya menggunakan perkalian matriks sebanyak
% log_2(n).
% 
% latex: x_n=A.x_{n-1}=A^2.x_{n-2}=A^3.x_{n-3}= ... = A^{n-1}.x_1.
>sequence("matrixpower(A,n).[1;1]",1,6)
            1             5            13            34            89           233 
            1             8            21            55           144           377 
>
% * Spiral Theodorus
% 
% image: Spiral_of_Theodorus.png
%% Spiral Theodorus (spiral segitiga siku-siku) dapat digambar secara rekursif. Rumus
% rekursifnya adalah:
% 
% latex: x_n = \left( 1 + \frac{i}{\sqrt{n-1}} \right) \, x_{n-1}, \quad x_1=1,
% 
% yang menghasilkan barisan bilangan kompleks.
>function g(n) := 1+I/sqrt(n)
% Rekursinya dapat dijalankan sebanyak 17 untuk menghasilkan barisan 17 bilangan kompleks,
% kemudian digambar bilangan-bilangan kompleksnya.
>x=sequence("g(n-1)*x[n-1]",1,17); plot2d(x,r=3.5); textbox(latex("Spiral\ Theodorus"),0.4):
% Selanjutnya dihubungan titik 0 dengan titik-titik kompleks tersebut menggunakan loop.
>for i=1:cols(x); plot2d([0,x[i]],>add); end:
> 
% Spiral tersebut juga dapat didefinisikan menggunakan fungsi rekursif, yang tidak memmerlukan
% indeks dan bilangan kompleks. Dalam hal ini diigunakan vektor kolom pada bidang.
>function gstep (v) ...
$w=[-v[2];v[1]];
$return v+w/norm(w);
$endfunction
% Jika dilakukan iterasi 16 kali dimulai dari [1;0] akan didapatkan matriks yang memuat
% vektor-vektor dari setiap iterasi.
>x=iterate("gstep",[1;0],16); plot2d(x[1],x[2],r=3.5,>points):
% 
% * Kekonvergenan
% 
% Terkadang kita ingin melakukan iterasi sampai konvergen. Apabila iterasinya tidak konvergen
% setelah ditunggu lama, Anda dapat menghentikannya dengan menekan tombol [ESC].
>iterate("cos(x)",1) // iterasi x(n+1)=cos(x(n)), dengan x(0)=1.
0.739085133216
% Iterasi tersebut konvergen ke penyelesaian persamaan
% 
% latex: x = \cos(x).
% 
% Iterasi ini juga dapat dilakukan pada interval, hasilnya adalah barisan interval yang memuat
% akar tersebut.
>hasil := iterate("cos(x)",~1,2~) //iterasi x(n+1)=cos(x(n)), dengan interval awal (1, 2)
~0.739085133211,0.7390851332133~
% Jika interval hasil tersebut sedikit diperlebar, akan terlihat bahwa interval tersebut
% memuat akar persamaan x=cos(x).
>h=expand(hasil,100), cos(h) << h
~0.73908513309,0.73908513333~
1
% Iterasi juga dapat digunakan pada fungsi yang didefinisikan.
>function f(x) := (x+2/x)/2
% Iterasi x(n+1)=f(x(n)) akan konvergen ke akar kuadrat 2.
>iterate("f",2), sqrt(2)
1.41421356237
1.41421356237
% Jika pada perintah iterate diberikan tambahan parameter n, maka hasil iterasinya akan
% ditampilkan mulai dari iterasi pertama sampai ke-n.
>iterate("f",2,5)
[2,  1.5,  1.41667,  1.41422,  1.41421,  1.41421]
% Untuk iterasi ini tidak dapat dilakukan terhadap interval.
>niterate("f",~1,2~,5)
[ ~1,2~,  ~1,2~,  ~1,2~,  ~1,2~,  ~1,2~,  ~1,2~ ]
% Perhatikan, hasil iterasinya sama dengan interval awal. Alasannya adalah perhitungan dengan
% interval bersifat terlalu longgar. Untuk meingkatkan perhitungan pada ekspresi dapat
% digunakan pembagian intervalnya, menggunakan fungsi ieval().
>function s(x) := ieval("(x+2/x)/2",x,10)
% Selanjutnya dapat dilakukan iterasi hingga diperoleh hasil optimal, dan intervalnya tidak
% semakin mengecil. Hasilnya berupa interval yang memuat akar persamaan:
% 
% latex: x = \frac{1}{2} \left( x + \frac{2}{x} \right).
% 
% Satu-satunya solusi adalah
%% latex: x = \sqrt2.
>iterate("s",~1,2~)
~1.41421356236,1.41421356239~
% Fungsi "iterate()" juga dapat bekerja pada vektor. Berikut adalah contoh fungsi vektor, yang
% menghasilkan rata-rata aritmetika dan rata-rata geometri.
% 
% latex: (a_{n+1},b_{n+1}) = \left( \frac{a_n+b_n}{2}, \sqrt{a_nb_n} \right)
% 
% Iterasi ke-n disimpan pada vektor kolom x[n].
>function g(x) := [(x[1]+x[2])/2;sqrt(x[1]*x[2])]
% Iterasi dengan menggunakan fungsi tersebut akan konvergen ke rata-rata aritmetika dan
% geometri dari nilai-nilai awal. 
>iterate("g",[1;5])
      2.60401 
      2.60401 
% Hasil tersebut konvergen agak cepat, seperti kita cek sebagai berikut.
>iterate("g",[1;5],4)
            1             3       2.61803       2.60403       2.60401 
            5       2.23607       2.59002       2.60399       2.60401 
% Iterasi pada interval dapat dilakukan dan stabil, namun tidak menunjukkan bahwa limitnya
% pada batas-batas yang dihitung.
>iterate("g",[~1~;~5~],4)
Interval 2 x 5 matrix

~0.999999999999999778,1.00000000000000022~     ...
~4.99999999999999911,5.00000000000000089~     ...
% Iterasi berikut konvergen sangat lambat.
% 
% latex: x_{n+1} = \sqrt{x_n}.
>iterate("sqrt(x)",2,10)
[2,  1.41421,  1.18921,  1.09051,  1.04427,  1.0219,  1.01089,  1.00543,  1.00271,  1.00135,
1.00068]
% Kekonvergenan iterasi tersebut dapat dipercepatdengan percepatan Steffenson:
>steffenson("sqrt(x)",2,10)
[1.04888,  1.00028,  1,  1]
% * Iterasi menggunakan Loop yang ditulis Langsung
% 
% Berikut adalah beberapa contoh penggunaan loop untuk melakukan iterasi yang ditulis langsung
% pada baris perintah.
>x=2; repeat x=(x+2/x)/2; until x^2~=2; end; x,
1.41421356237
% Penggabungan matriks menggunakan tanda "|" dapat digunakan untuk menyimpan semua hasil
% iterasi.
>v=[1]; for i=2 to 8; v=v|(v[i-1]*i); end; v,
[1,  2,  6,  24,  120,  720,  5040,  40320]
% hasil iterasi juga dapat disimpan pada vektor yang sudah ada.
>v=ones(1,100); for i=2 to cols(v); v[i]=v[i-1]*i; end; ...
>plot2d(v,logplot=1); textbox(latex(&log(n)),x=0.5):
>A =[0.5,0.2;0.7,0.1]; b=[2;2]; ...
>x=[1;1]; repeat xnew=A.x-b; until all(xnew~=x); x=xnew; end; ...
>x,
     -7.09677 
     -7.74194 
>//
% * Iterasi di dalam Fungsi
% 
% Fungsi atau program juga dapat menggunakan iterasi dan dapat digunakan untuk melakukan iterasi. Berikut adalah beberapa contoh
% iterasi di dalam fungsi.
% 
% Contoh berikut adalah suatu fungsi untuk menghitung berapa lama suatu iterasi konvergen. Nilai fungsi tersebut adalah hasil akhir
% iterasi dan banyak iterasi sampai konvergen.
>function map hiter(f$,x0) ...
$x=x0;
$maxiter=0;
$repeat
$  xnew=f$(x);
$  maxiter=maxiter+1;
$  until xnew~=x;
$  x=xnew;
$end;
$return maxiter;
$endfunction
% Misalnya, berikut adalah iterasi untuk mendapatkan hampiran akar kuadrat 2, cukup cepat,
% konvergen pada iterasi ke-5, jika dimulai dari hampiran awal 2.
>hiter("(x+2/x)/2",2)
5
% Karena fungsinya didefinisikan menggunakan "map". maka nilai awalnya dapat berupa vektor.
>x=1.5:0.1:10; hasil=hiter("(x+2/x)/2",x); ...
>  plot2d(x,hasil):
% Dari gambar di atas terlihat bahwa kekonvergenan iterasinya semakin lambat, untuk nilai awal
% semakin besar, namun penambahnnya tidak kontinu. Kita dapat menemukan kapan maksimum
% iterasinya bertambah.
>hasil[1:10]
[4,  5,  5,  5,  5,  5,  6,  6,  6,  6]
>x[nonzeros(differences(hasil))]
[1.5,  2,  3.4,  6.6]
% maksimum iterasi sampai konvergen meningkat pada saat nilai awalnya 1.5, 2, 3.4, dan 6.6.
% 
% Contoh berikutnya adalah metode Newton pada polinomial kompleks berderajat 3.
>p &= x^3-1; newton &= x-p/diff(p,x); $newton
% Selanjutnya didefinisikan fungsi untuk melakukan iterasi (aslinya 10 kali).
>function iterasi(f$,x,n=10) ...
$loop 1 to n; x=f$(x); end;
$return x;
$endfunction
% Kita mulai dengan menentukan titik-titik grid pada bidang kompleksnya.
>r=1.5; x=linspace(-r,r,501); Z=x+I*x'; W=iterasi(newton,Z);
% Berikut adalah akar-akar polinomial di atas.
>z=&solve(p)()
[ -0.5+0.866025i,  -0.5-0.866025i,  1+0i  ]
% Untuk menggambar hasil iterasinya, dihitung jarak dari hasil iterasi ke-10 ke masing-masing
% akar, kemudian digunakan untuk menghitung warna yang akan digambar, yang menunjukkan limit
% untuk masing-masing nilai awal. 
% 
% Fungsi plotrgb() menggunakan jendela gambar terkini untuk menggambar warna RGB sebagai
% matriks.
>C=rgb(max(abs(W-z[1]),1),max(abs(W-z[2]),1),max(abs(W-z[3]),1)); ...
>  plot2d(none,-r,r,-r,r); plotrgb(C):
% * Iterasi Simbolik
% 
% Seperti sudah dibahas sebelumnya, untuk menghasilkan barisan ekspresi simbolik dengan Maxima
% dapat digunakan fungsi makelist().
>&powerdisp:true // untuk menampilkan deret pangkat mulai dari suku berpangkat terkecil

                                          true

>deret &= makelist(taylor(exp(x),x,0,k),k,1,3); $deret // barisan deret Taylor untuk e^x
% Untuk mengubah barisan deret tersebut menjadi vektor string di EMT digunakan fungsi
% mxm2str(). Selanjutnya, vektor string/ekspresi hasilnya dapat digambar seperti menggambar
% vektor eskpresi pada EMT.
>plot2d("exp(x)",0,3); // plot fungsi aslinya, e^x
>plot2d(mxm2str("deret"),>add,color=4:6): // plot ketiga deret taylor hampiran fungsi tersebut
% Selain cara di atas dapat juga dengan cara menggunakan indeks pada vektor/list yang
% dihasilkan.
>$deret[3]
>plot2d(["exp(x)",&deret[1],&deret[2],&deret[3]],0,3,color=1:4):
>$sum(sin(k*x)/k,k,1,5)
% Berikut adalah cara menggambar kurva
% 
% latex: y=\sin(x) + \dfrac{\sin 3x}{3} + \dfrac{\sin 5x}{5} + \ldots.
>plot2d(&sum(sin((2*k+1)*x)/(2*k+1),k,0,20),0,2pi):
% Hal serupa juga dapat dilakukan dengan menggunakan matriks, misalkan kita akan menggambar
% kurva
% 
% latex: y = \sum_{k=1}^{100} \dfrac{\sin(kx)}{k},\quad 0\le x\le 2\pi.
% 
% 
% 
>x=linspace(0,2pi,1000); k=1:100; y=sum(sin(k*x')/k)'; plot2d(x,y):
>
% * Tabel Fungsi
% 
% Terdapat cara menarik untuk menghasilkan barisan dengan ekspresi Maxima. Perintah
% mxmtable() berguna untuk menampilkan dan menggambar barisan dan menghasilkan barisan sebagai
% vektor kolom. 
% 
% Sebagai contoh berikut adalah barisan turunan ke-n x^x di x=1.
>mxmtable("diffat(x^x,x=1,n)","n",1,8,frac=1);
        1 
        2 
        3 
        8 
       10 
       54 
      -42 
      944 
>
>$'sum(k, k, 1, n) = factor(ev(sum(k, k, 1, n),simpsum=true)) // simpsum:menghitung deret secara simbolik
>$'sum(1/(3^k+k), k, 0, inf) = factor(ev(sum(1/(3^k+k), k, 0, inf),simpsum=true))
% Di sini masih gagal, hasilnya tidak dihitung.
>
>$'sum(1/x^2, x, 1, inf)= ev(sum(1/x^2, x, 1, inf),simpsum=true) // ev: menghitung nilai ekspresi
>$'sum((-1)^(k-1)/k, k, 1, inf) = factor(ev(sum((-1)^(x-1)/x, x, 1, inf),simpsum=true))
% Di sini masih gagal, hasilnya tidak dihitung.
>$'sum((-1)^k/(2*k-1), k, 1, inf) = factor(ev(sum((-1)^k/(2*k-1), k, 1, inf),simpsum=true))
>$ev(sum(1/n!, n, 0, inf),simpsum=true)
% Di sini masih gagal, hasilnya tidak dihitung, harusnya hasilnya e.
>&assume(abs(x)<1); $'sum(a*x^k, k, 0, inf)=ev(sum(a*x^k, k, 0, inf),simpsum=true), &forget(abs(x)<1);
% Deret geometri tak hingga, dengan asumsi rasional antara -1 dan 1.
>$'sum(x^k/k!,k,0,inf)=ev(sum(x^k/k!,k,0,inf),simpsum=true)
>$limit(sum(x^k/k!,k,0,n),n,inf)
>function d(n) &= sum(1/(k^2-k),k,2,n); $'d(n)=d(n)
>$d(10)=ev(d(10),simpsum=true)
>$d(100)=ev(d(100),simpsum=true)
>
>
% * Deret Taylor
% 
% Deret Taylor suatu fungsi f yang diferensiabel sampai tak hingga di sekitar x=a adalah:
% 
% latex: f(x) = \sum_{k=0}^\infty \frac{(x-a)^k f^{(k)}(a)}{k!}.
>$'e^x =taylor(exp(x),x,0,10) // deret Taylor e^x di sekitar x=0, sampai suku ke-11
>$'log(x)=taylor(log(x),x,1,10)// deret log(x) di sekitar x=1
>
>
>
>
>
>
